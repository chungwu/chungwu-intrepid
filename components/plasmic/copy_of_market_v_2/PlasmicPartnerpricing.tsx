// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4BLiU6oPcZdXDvseuPTeUa
// Component: 8iGuK90Y8HpEoxI
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavbarPrimary from "../../NavbarPrimary"; // plasmic-import: _8h_FsYt50dxoo/component
import ButtonPrimary from "../../ButtonPrimary"; // plasmic-import: gpNjXfbD_ZdpPU/component
import PricingPageElementTeamBlock from "../../PricingPageElementTeamBlock"; // plasmic-import: z1m_lEVVJqYOi96/component
import PricingPageElementServiceBlock from "../../PricingPageElementServiceBlock"; // plasmic-import: adlTRbUv8NU1Fen/component
import TablePricing from "../../TablePricing"; // plasmic-import: ZMIdBGmrvix6xJy/component
import CardFeatureDescription from "../../CardFeatureDescription"; // plasmic-import: hLrFJ-JgiWwHRG/component
import FooterB from "../../FooterB"; // plasmic-import: IZENTiSL4_zyK8/component

import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: biX3aS42hiG0fF/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_copy_of_market_v_2.module.css"; // plasmic-import: 4BLiU6oPcZdXDvseuPTeUa/projectcss
import * as sty from "./PlasmicPartnerpricing.module.css"; // plasmic-import: 8iGuK90Y8HpEoxI/css

import PlusBoldIcon from "./icons/PlasmicIcon__PlusBold"; // plasmic-import: lhSEEajPJGZatfD/icon
import LineIcon from "./icons/PlasmicIcon__Line"; // plasmic-import: tj9z8EV3eWQPXzK/icon
import Icon129Icon from "./icons/PlasmicIcon__Icon129"; // plasmic-import: 3f8NxRRxXPSDSg5/icon
import TeamPartnersIcon from "./icons/PlasmicIcon__TeamPartners"; // plasmic-import: Hf6TOd80Ag78cQq/icon
import Icon164Icon from "./icons/PlasmicIcon__Icon164"; // plasmic-import: w7nSyC5BjylkNp1/icon
import Icon122Icon from "./icons/PlasmicIcon__Icon122"; // plasmic-import: GEUiKMgMQ7RXOJ2/icon
import ListingIcon from "./icons/PlasmicIcon__Listing"; // plasmic-import: V-Z6DuZPre8UBS6/icon
import Icon169Icon from "./icons/PlasmicIcon__Icon169"; // plasmic-import: hzDc3CsFLBB3eRG/icon
import DesignIcon from "./icons/PlasmicIcon__Design"; // plasmic-import: AESmd_TfxChaUxs/icon
import GlobeAmericaIcon from "./icons/PlasmicIcon__GlobeAmerica"; // plasmic-import: 9UhcgnZMzeumqEQ/icon
import P2PPayPaymentIcon from "./icons/PlasmicIcon__P2PPayPayment"; // plasmic-import: 0OKZB0Nv7hmXoy0/icon
import VerifiedIcon from "./icons/PlasmicIcon__Verified"; // plasmic-import: 8tT8IQcfwxBpGPS/icon
import ChartIcon from "./icons/PlasmicIcon__Chart"; // plasmic-import: B44to6Maolz5BFM/icon

export type PlasmicPartnerpricing__VariantMembers = {};

export type PlasmicPartnerpricing__VariantsArgs = {};
type VariantPropType = keyof PlasmicPartnerpricing__VariantsArgs;
export const PlasmicPartnerpricing__VariantProps = new Array<VariantPropType>();

export type PlasmicPartnerpricing__ArgsType = {};
type ArgPropType = keyof PlasmicPartnerpricing__ArgsType;
export const PlasmicPartnerpricing__ArgProps = new Array<ArgPropType>();

export type PlasmicPartnerpricing__OverridesType = {
  root?: p.Flex<"div">;
  navbarPrimary?: p.Flex<typeof NavbarPrimary>;
  overlineHeadline?: p.Flex<"div">;
  partnerMakerPricingTable?: p.Flex<"div">;
  featureParent?: p.Flex<"div">;
  textIconFeature?: p.Flex<"div">;
  textIconFeature3?: p.Flex<"div">;
  textIconFeature22?: p.Flex<"div">;
  textIconFeature4?: p.Flex<"div">;
  textIconFeature5?: p.Flex<"div">;
  pricingPageElementTeamBlock?: p.Flex<typeof PricingPageElementTeamBlock>;
  pricingPageElementServiceBlock?: p.Flex<
    typeof PricingPageElementServiceBlock
  >;
  dollarPrice?: p.Flex<"div">;
  overlineHeadline22?: p.Flex<"div">;
  partnerPricingTableSection?: p.Flex<"div">;
  partnerProPricingTable?: p.Flex<typeof TablePricing>;
  partnerStartupPricingTable?: p.Flex<typeof TablePricing>;
  partnerAgencyPricingtable?: p.Flex<typeof TablePricing>;
  overlineHeadline2?: p.Flex<"div">;
  overlineHeadline24?: p.Flex<"div">;
  footerB?: p.Flex<typeof FooterB>;
};

export interface DefaultPartnerpricingProps {
  dataFetches: PlasmicPartnerpricing__Fetches;
}

function PlasmicPartnerpricing__RenderFunc(props: {
  variants: PlasmicPartnerpricing__VariantsArgs;
  args: PlasmicPartnerpricing__ArgsType;
  overrides: PlasmicPartnerpricing__OverridesType;
  dataFetches?: PlasmicPartnerpricing__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <Head>
        <title key="title">{""}</title>
        <meta key="og:title" property="og:title" content={""} />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={""}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <NavbarPrimary
            data-plasmic-name={"navbarPrimary"}
            data-plasmic-override={overrides.navbarPrimary}
            className={classNames("__wab_instance", sty.navbarPrimary)}
            user={"seller" as const}
          />

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__qlMCn)}
          >
            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.freeBox__wspnO
              )}
            >
              {"Grow from solopreneur to global creative force."}
            </div>

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.freeBox__llL5I
              )}
            >
              {
                "Scope and create unique offerings from our library of services, collaborate with partners, and sell directly to your followers, startups, and global brands - all over the world."
              }
            </div>

            <ButtonPrimary
              className={classNames("__wab_instance", sty.buttonPrimary__pY0Y)}
              color={"brand" as const}
              size={"_360" as const}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.freeBox__eZ18Z
                )}
              >
                {"Start selling"}
              </div>
            </ButtonPrimary>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__wbVeH)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"overlineHeadline"}
              data-plasmic-override={overrides.overlineHeadline}
              hasGap={true}
              className={classNames(defaultcss.all, sty.overlineHeadline)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__e8QHs)}
              >
                <LineIcon
                  className={classNames(defaultcss.all, sty.svg___3DHxi)}
                  role={"img"}
                />

                <div className={classNames(defaultcss.all, sty.freeBox__heUp)}>
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__zzadB
                    )}
                  >
                    {"Free to start"}
                  </div>
                </div>

                <LineIcon
                  className={classNames(defaultcss.all, sty.svg___83HD)}
                  role={"img"}
                />
              </p.Stack>

              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.freeBox___8N1Fc
                )}
              >
                {"We grow and get better only when our partners make money."}
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__jluVr)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox___4CZLa)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__cZbAz)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__vwIlw
                    )}
                  >
                    {"Maker"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__pTy
                    )}
                  >
                    {"Partner"}
                  </div>
                </p.Stack>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox___0OMao
                  )}
                >
                  {
                    "It's free to start and get everything you need to create meaningful income for your business, your collaborators, and a rewarding experience for your followers and clients."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"partnerMakerPricingTable"}
                data-plasmic-override={overrides.partnerMakerPricingTable}
                hasGap={true}
                className={classNames(
                  defaultcss.all,
                  sty.partnerMakerPricingTable
                )}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"featureParent"}
                  data-plasmic-override={overrides.featureParent}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.featureParent)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__cshkf
                    )}
                  >
                    {"features"}
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"textIconFeature"}
                    data-plasmic-override={overrides.textIconFeature}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.textIconFeature)}
                  >
                    <div
                      className={classNames(defaultcss.all, sty.freeBox__afgW)}
                    >
                      <Icon129Icon
                        className={classNames(defaultcss.all, sty.svg__cLvQs)}
                        role={"img"}
                      />
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__rbIg
                      )}
                    >
                      {"Get started for free"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"textIconFeature3"}
                    data-plasmic-override={overrides.textIconFeature3}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.textIconFeature3)}
                  >
                    <div
                      className={classNames(defaultcss.all, sty.freeBox__wvUfr)}
                    >
                      <Icon129Icon
                        className={classNames(defaultcss.all, sty.svg__nXgf)}
                        role={"img"}
                      />
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__s6KoF
                      )}
                    >
                      {"No annual fee"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"textIconFeature22"}
                    data-plasmic-override={overrides.textIconFeature22}
                    hasGap={true}
                    className={classNames(
                      defaultcss.all,
                      sty.textIconFeature22
                    )}
                  >
                    <div
                      className={classNames(defaultcss.all, sty.freeBox__tCJz4)}
                    >
                      <Icon129Icon
                        className={classNames(defaultcss.all, sty.svg___0F5Yr)}
                        role={"img"}
                      />
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__wuDDp
                      )}
                    >
                      {"Hosted Partner profile"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"textIconFeature4"}
                    data-plasmic-override={overrides.textIconFeature4}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.textIconFeature4)}
                  >
                    <div
                      className={classNames(defaultcss.all, sty.freeBox__dOaCy)}
                    >
                      <Icon129Icon
                        className={classNames(defaultcss.all, sty.svg__vxPtS)}
                        role={"img"}
                      />
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__u3Ihc
                      )}
                    >
                      {"Join events & webinars"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"textIconFeature5"}
                    data-plasmic-override={overrides.textIconFeature5}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.textIconFeature5)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        sty.freeBox___83Vzx
                      )}
                    >
                      <Icon129Icon
                        className={classNames(defaultcss.all, sty.svg___50Ee4)}
                        role={"img"}
                      />
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__yUuUc
                      )}
                    >
                      {"Access community and messaging"}
                    </div>
                  </p.Stack>

                  <PricingPageElementTeamBlock
                    data-plasmic-name={"pricingPageElementTeamBlock"}
                    data-plasmic-override={
                      overrides.pricingPageElementTeamBlock
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.pricingPageElementTeamBlock
                    )}
                    slot={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__nnvY1
                        )}
                      >
                        {"1"}
                      </div>
                    }
                    slot2={
                      <TeamPartnersIcon
                        className={classNames(defaultcss.all, sty.svg__n1MaN)}
                        role={"img"}
                      />
                    }
                    slot3={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__uGjmc
                        )}
                      >
                        {"Team"}
                      </div>
                    }
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__dOqlU
                      )}
                    >
                      {"User included"}
                    </div>
                  </PricingPageElementTeamBlock>

                  <PricingPageElementServiceBlock
                    data-plasmic-name={"pricingPageElementServiceBlock"}
                    data-plasmic-override={
                      overrides.pricingPageElementServiceBlock
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.pricingPageElementServiceBlock
                    )}
                    featurevalueText={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__oQJh
                        )}
                      >
                        {"Priority upgrade per listing"}
                      </div>
                    }
                    slot={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__v6H4C
                        )}
                      >
                        {"8"}
                      </div>
                    }
                    slot10={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox___0MaPp
                        )}
                      >
                        {"Standard rate per listing"}
                      </div>
                    }
                    slot11={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__fp1Pm
                        )}
                      >
                        {"Payment processing fees"}
                      </div>
                    }
                    slot12={
                      <Icon164Icon
                        className={classNames(defaultcss.all, sty.svg__dn7W)}
                        role={"img"}
                      />
                    }
                    slot13={
                      <Icon122Icon
                        className={classNames(defaultcss.all, sty.svg__cy3U8)}
                        role={"img"}
                      />
                    }
                    slot14={
                      <ListingIcon
                        className={classNames(defaultcss.all, sty.svg__q56Bb)}
                        role={"img"}
                      />
                    }
                    slot15={
                      <Icon169Icon
                        className={classNames(defaultcss.all, sty.svg___3Qrbs)}
                        role={"img"}
                      />
                    }
                    slot2={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__tzFdu
                        )}
                      >
                        {"5"}
                      </div>
                    }
                    slot3={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__vDNeJ
                        )}
                      >
                        {"3"}
                      </div>
                    }
                    slot4={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__xMmD
                        )}
                      >
                        {"Service rate on earned income"}
                      </div>
                    }
                    slot5={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__aP1AZ
                        )}
                      >
                        {"$"}
                      </div>
                    }
                    slot6={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__b7FaV
                        )}
                      >
                        {"Service"}
                      </div>
                    }
                    slot7={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__g9H1
                        )}
                      >
                        {"$"}
                      </div>
                    }
                    slot8={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__rx6Fu
                        )}
                      >
                        {"%"}
                      </div>
                    }
                    slot9={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__tOnm9
                        )}
                      >
                        {"%"}
                      </div>
                    }
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__ttx
                      )}
                    >
                      {"0"}
                    </div>
                  </PricingPageElementServiceBlock>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__kluAw)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox__ut2S)}
                  >
                    <div
                      data-plasmic-name={"dollarPrice"}
                      data-plasmic-override={overrides.dollarPrice}
                      className={classNames(defaultcss.all, sty.dollarPrice)}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__zK7G
                        )}
                      >
                        {"$"}
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox___0XJw
                        )}
                      >
                        {"0"}
                      </div>
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox___0DXhS
                      )}
                    >
                      {"/Year"}
                    </div>
                  </p.Stack>

                  <ButtonPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.buttonPrimary__x3FZ
                    )}
                    color={"brand" as const}
                    size={"_270" as const}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__ocuMd
                      )}
                    >
                      {"Start selling"}
                    </div>
                  </ButtonPrimary>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___69Clo
                    )}
                  >
                    {"No creditcard required"}
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__csNjv)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"overlineHeadline22"}
              data-plasmic-override={overrides.overlineHeadline22}
              hasGap={true}
              className={classNames(defaultcss.all, sty.overlineHeadline22)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__ci5Sc)}
              >
                <LineIcon
                  className={classNames(defaultcss.all, sty.svg__nru4R)}
                  role={"img"}
                />

                <div className={classNames(defaultcss.all, sty.freeBox__cdbR9)}>
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__mJHwM
                    )}
                  >
                    {"Premium Plans"}
                  </div>
                </div>

                <LineIcon
                  className={classNames(defaultcss.all, sty.svg___5Mopf)}
                  role={"img"}
                />
              </p.Stack>

              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.freeBox__axO1U
                )}
              >
                {"Designed for every stage of your business growth."}
              </div>
            </p.Stack>

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.freeBox__i0J1C
              )}
            >
              {
                "Go from a one person creative professional to a global studio. Work from anywhere - on your terms - knowing you have a community to support you at every stage of your growth."
              }
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            data-plasmic-name={"partnerPricingTableSection"}
            data-plasmic-override={overrides.partnerPricingTableSection}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              sty.partnerPricingTableSection
            )}
          >
            {true ? (
              <TablePricing
                data-plasmic-name={"partnerProPricingTable"}
                data-plasmic-override={overrides.partnerProPricingTable}
                className={classNames(
                  "__wab_instance",
                  sty.partnerProPricingTable
                )}
                slot={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__pSr9M
                    )}
                  >
                    {
                      "Choose if you are an independent creative professional or solopreneur getting ready to grow your creative technology studio."
                    }
                  </div>
                }
                slot12={"Service rate on income"}
                slot14={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__jtkWb
                    )}
                  >
                    {"Everything in Maker - plus"}
                  </div>
                }
                slot15={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__ftVse
                    )}
                  >
                    {"Verified profile"}
                  </div>
                }
                slot16={"Receive and respond to direct messages."}
                slot17={"Priority access to events and workshops"}
                slot18={"Email and community support"}
                slot20={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__yb8Dm
                    )}
                  >
                    {"Start selling"}
                  </div>
                }
                slot3={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__iiH3J
                    )}
                  >
                    {
                      "Get all the tools you need to grow a global audience and build a valuable business."
                    }
                  </div>
                }
                slot4={"2"}
                slot5={"5"}
                slot6={"3"}
                slot7={"2"}
              >
                {"Pro"}
              </TablePricing>
            ) : null}

            <TablePricing
              data-plasmic-name={"partnerStartupPricingTable"}
              data-plasmic-override={overrides.partnerStartupPricingTable}
              className={classNames(
                "__wab_instance",
                sty.partnerStartupPricingTable
              )}
              slot={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__zNrHz
                  )}
                >
                  {
                    "Choose if you are scaling up your studio and want more tools to manage your business and collaborate with other teams."
                  }
                </div>
              }
              slot12={"Service rate on income"}
              slot14={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__uUbqU
                  )}
                >
                  {"Everything in Pro - plus"}
                </div>
              }
              slot15={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__cmGmP
                  )}
                >
                  {"Advanced partner profile"}
                </div>
              }
              slot16={"Advanced composite products & services"}
              slot17={"Subscription & promotion management tools"}
              slot18={"Chat support"}
              slot2={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__brrZn
                  )}
                >
                  {"75"}
                </div>
              }
              slot20={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox___6Za91
                  )}
                >
                  {"Start selling"}
                </div>
              }
              slot3={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__eaz4E
                  )}
                >
                  {
                    "Form teams, collaborate, and access advanced scoping and service design tools."
                  }
                </div>
              }
              slot6={"2"}
            >
              {"Studio"}
            </TablePricing>

            <TablePricing
              data-plasmic-name={"partnerAgencyPricingtable"}
              data-plasmic-override={overrides.partnerAgencyPricingtable}
              className={classNames(
                "__wab_instance",
                sty.partnerAgencyPricingtable
              )}
              slot={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__nyp16
                  )}
                >
                  {
                    "Choose if you are a global agency that wants advanced subscription, composite services, expense management, and collaboration tools."
                  }
                </div>
              }
              slot10={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__cCoQn
                  )}
                >
                  {"Free listings"}
                </div>
              }
              slot11={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox___0R5Im
                  )}
                >
                  {"$"}
                </div>
              }
              slot12={"No service rate on income"}
              slot13={"Payment processing fees"}
              slot14={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__r19X
                  )}
                >
                  {"Everything in Studio - plus"}
                </div>
              }
              slot15={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__yYj4
                  )}
                >
                  {"Featured partner profile"}
                </div>
              }
              slot16={"Priority access to events & workshops."}
              slot17={"Partner discount on popular Saas tools."}
              slot18={"Dedicated and private partner community."}
              slot2={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__pRvUh
                  )}
                >
                  {"100"}
                </div>
              }
              slot20={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__fnecY
                  )}
                >
                  {"Start selling"}
                </div>
              }
              slot3={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__qz0De
                  )}
                >
                  {
                    "Get a featured profile, priority access to community events, and partner discounts."
                  }
                </div>
              }
              slot4={"10"}
              slot5={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__hxlM
                  )}
                >
                  {"0"}
                </div>
              }
              slot6={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__esbf5
                  )}
                >
                  {"0"}
                </div>
              }
              slot7={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__q1JZp
                  )}
                >
                  {"1"}
                </div>
              }
              slot8={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__isoZo
                  )}
                >
                  {"$"}
                </div>
              }
              slot9={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__nGtd8
                  )}
                >
                  {"Free priority placement by default"}
                </div>
              }
            >
              {"Agency"}
            </TablePricing>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__hWuAt)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"overlineHeadline2"}
              data-plasmic-override={overrides.overlineHeadline2}
              hasGap={true}
              className={classNames(defaultcss.all, sty.overlineHeadline2)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__fvIaU)}
              >
                <LineIcon
                  className={classNames(defaultcss.all, sty.svg___5BQpz)}
                  role={"img"}
                />

                <div className={classNames(defaultcss.all, sty.freeBox__zuQwo)}>
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___2UHmd
                    )}
                  >
                    {"Benefits"}
                  </div>
                </div>

                <LineIcon
                  className={classNames(defaultcss.all, sty.svg__u9X77)}
                  role={"img"}
                />
              </p.Stack>

              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.freeBox__n547R
                )}
              >
                {"All memberships include"}
              </div>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox___4MvDx)}
          >
            <CardFeatureDescription
              className={classNames(
                "__wab_instance",
                sty.cardFeatureDescription__xaHjr
              )}
              headline={"Automated scoping & service design"}
              iconParent={
                <div className={classNames(defaultcss.all, sty.freeBox__kyARw)}>
                  <p.PlasmicIcon
                    PlasmicIconType={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? DesignIcon
                        : DesignIcon
                    }
                    className={classNames(defaultcss.all, sty.svg__uaNj9)}
                    role={"img"}
                  />
                </div>
              }
              text={
                "Scope and create unique services, in multiple compositions, blazingly fast, making it easier for clients to buy your services."
              }
            />

            <CardFeatureDescription
              className={classNames(
                "__wab_instance",
                sty.cardFeatureDescription__ho9BA
              )}
              headline={"Sell direct to a global audience"}
              iconParent={
                <div className={classNames(defaultcss.all, sty.freeBox__r1Zmb)}>
                  <p.PlasmicIcon
                    PlasmicIconType={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? GlobeAmericaIcon
                        : GlobeAmericaIcon
                    }
                    className={classNames(defaultcss.all, sty.svg__rSkUt)}
                    role={"img"}
                  />
                </div>
              }
              text={
                "Reach a global client base and enjoy a steady flow of high-value, remote-first company clients all year round."
              }
            />

            <CardFeatureDescription
              className={classNames(
                "__wab_instance",
                sty.cardFeatureDescription__pRMkk
              )}
              headline={"Fast International P2P payments"}
              iconParent={
                <div className={classNames(defaultcss.all, sty.freeBox__tByxv)}>
                  <P2PPayPaymentIcon
                    className={classNames(defaultcss.all, sty.svg__yHkgu)}
                    role={"img"}
                  />
                </div>
              }
              text={
                "Get paid quickly and easily, even across international borders with automated invoice processing, payments, and escrow."
              }
            />

            <CardFeatureDescription
              className={classNames(
                "__wab_instance",
                sty.cardFeatureDescription__pq8Rb
              )}
              headline={"Verified profiles, ratings & reviews"}
              iconParent={
                <div className={classNames(defaultcss.all, sty.freeBox__cefDq)}>
                  <VerifiedIcon
                    className={classNames(defaultcss.all, sty.svg__ujRn)}
                    role={"img"}
                  />
                </div>
              }
              text={
                "Become a trusted seller and drive future sales with verified reviews from top-tier enterprises."
              }
            />

            <CardFeatureDescription
              className={classNames(
                "__wab_instance",
                sty.cardFeatureDescription__jxf6C
              )}
              headline={"Analytics & performance tracking"}
              iconParent={
                <div className={classNames(defaultcss.all, sty.freeBox__oRHy7)}>
                  <ChartIcon
                    className={classNames(defaultcss.all, sty.svg__e50Q)}
                    role={"img"}
                  />
                </div>
              }
              text={
                "Access powerful analytics and lead generation tools to better understand your followers, customers, and build a scalable and profitable business."
              }
            />

            <CardFeatureDescription
              className={classNames(
                "__wab_instance",
                sty.cardFeatureDescription__quOek
              )}
              headline={"Community & collaboration"}
              iconParent={
                <div className={classNames(defaultcss.all, sty.freeBox__oF1Hc)}>
                  <TeamPartnersIcon
                    className={classNames(defaultcss.all, sty.svg__uJmmv)}
                    role={"img"}
                  />
                </div>
              }
              text={
                "Learn from leading entrepreneurs, creatives, and cutting-edge technologists from around the world."
              }
            />
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox___58Chj)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__v4MsZ)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"overlineHeadline24"}
                data-plasmic-override={overrides.overlineHeadline24}
                hasGap={true}
                className={classNames(defaultcss.all, sty.overlineHeadline24)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox___0XiY7)}
                >
                  <LineIcon
                    className={classNames(defaultcss.all, sty.svg__ci56P)}
                    role={"img"}
                  />

                  <div
                    className={classNames(defaultcss.all, sty.freeBox__zQeA7)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__botd9
                      )}
                    >
                      {"Community"}
                    </div>
                  </div>

                  <LineIcon
                    className={classNames(defaultcss.all, sty.svg___7HJqp)}
                    role={"img"}
                  />
                </p.Stack>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__c74Ry
                  )}
                >
                  {
                    "Join a global marketplace community built for creative entrepreneurs"
                  }
                </div>
              </p.Stack>
            </p.Stack>

            <ButtonPrimary
              className={classNames("__wab_instance", sty.buttonPrimary__wRek)}
              color={"brand" as const}
              size={"_360" as const}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.freeBox__lOs39
                )}
              >
                {"Start selling"}
              </div>
            </ButtonPrimary>
          </p.Stack>

          <FooterB
            data-plasmic-name={"footerB"}
            data-plasmic-override={overrides.footerB}
            className={classNames("__wab_instance", sty.footerB)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbarPrimary",
    "overlineHeadline",
    "partnerMakerPricingTable",
    "featureParent",
    "textIconFeature",
    "textIconFeature3",
    "textIconFeature22",
    "textIconFeature4",
    "textIconFeature5",
    "pricingPageElementTeamBlock",
    "pricingPageElementServiceBlock",
    "dollarPrice",
    "overlineHeadline22",
    "partnerPricingTableSection",
    "partnerProPricingTable",
    "partnerStartupPricingTable",
    "partnerAgencyPricingtable",
    "overlineHeadline2",
    "overlineHeadline24",
    "footerB"
  ],
  navbarPrimary: ["navbarPrimary"],
  overlineHeadline: ["overlineHeadline"],
  partnerMakerPricingTable: [
    "partnerMakerPricingTable",
    "featureParent",
    "textIconFeature",
    "textIconFeature3",
    "textIconFeature22",
    "textIconFeature4",
    "textIconFeature5",
    "pricingPageElementTeamBlock",
    "pricingPageElementServiceBlock",
    "dollarPrice"
  ],
  featureParent: [
    "featureParent",
    "textIconFeature",
    "textIconFeature3",
    "textIconFeature22",
    "textIconFeature4",
    "textIconFeature5",
    "pricingPageElementTeamBlock",
    "pricingPageElementServiceBlock"
  ],
  textIconFeature: ["textIconFeature"],
  textIconFeature3: ["textIconFeature3"],
  textIconFeature22: ["textIconFeature22"],
  textIconFeature4: ["textIconFeature4"],
  textIconFeature5: ["textIconFeature5"],
  pricingPageElementTeamBlock: ["pricingPageElementTeamBlock"],
  pricingPageElementServiceBlock: ["pricingPageElementServiceBlock"],
  dollarPrice: ["dollarPrice"],
  overlineHeadline22: ["overlineHeadline22"],
  partnerPricingTableSection: [
    "partnerPricingTableSection",
    "partnerProPricingTable",
    "partnerStartupPricingTable",
    "partnerAgencyPricingtable"
  ],
  partnerProPricingTable: ["partnerProPricingTable"],
  partnerStartupPricingTable: ["partnerStartupPricingTable"],
  partnerAgencyPricingtable: ["partnerAgencyPricingtable"],
  overlineHeadline2: ["overlineHeadline2"],
  overlineHeadline24: ["overlineHeadline24"],
  footerB: ["footerB"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbarPrimary: typeof NavbarPrimary;
  overlineHeadline: "div";
  partnerMakerPricingTable: "div";
  featureParent: "div";
  textIconFeature: "div";
  textIconFeature3: "div";
  textIconFeature22: "div";
  textIconFeature4: "div";
  textIconFeature5: "div";
  pricingPageElementTeamBlock: typeof PricingPageElementTeamBlock;
  pricingPageElementServiceBlock: typeof PricingPageElementServiceBlock;
  dollarPrice: "div";
  overlineHeadline22: "div";
  partnerPricingTableSection: "div";
  partnerProPricingTable: typeof TablePricing;
  partnerStartupPricingTable: typeof TablePricing;
  partnerAgencyPricingtable: typeof TablePricing;
  overlineHeadline2: "div";
  overlineHeadline24: "div";
  footerB: typeof FooterB;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPartnerpricing__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPartnerpricing__VariantsArgs;
    args?: PlasmicPartnerpricing__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicPartnerpricing__Fetches;
  } & Omit<PlasmicPartnerpricing__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicPartnerpricing__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPartnerpricing__ArgProps,
      internalVariantPropNames: PlasmicPartnerpricing__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicPartnerpricing__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPartnerpricing";
  } else {
    func.displayName = `PlasmicPartnerpricing.${nodeName}`;
  }
  return func;
}

export const PlasmicPartnerpricing = Object.assign(
  // Top-level PlasmicPartnerpricing renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbarPrimary: makeNodeComponent("navbarPrimary"),
    overlineHeadline: makeNodeComponent("overlineHeadline"),
    partnerMakerPricingTable: makeNodeComponent("partnerMakerPricingTable"),
    featureParent: makeNodeComponent("featureParent"),
    textIconFeature: makeNodeComponent("textIconFeature"),
    textIconFeature3: makeNodeComponent("textIconFeature3"),
    textIconFeature22: makeNodeComponent("textIconFeature22"),
    textIconFeature4: makeNodeComponent("textIconFeature4"),
    textIconFeature5: makeNodeComponent("textIconFeature5"),
    pricingPageElementTeamBlock: makeNodeComponent(
      "pricingPageElementTeamBlock"
    ),
    pricingPageElementServiceBlock: makeNodeComponent(
      "pricingPageElementServiceBlock"
    ),
    dollarPrice: makeNodeComponent("dollarPrice"),
    overlineHeadline22: makeNodeComponent("overlineHeadline22"),
    partnerPricingTableSection: makeNodeComponent("partnerPricingTableSection"),
    partnerProPricingTable: makeNodeComponent("partnerProPricingTable"),
    partnerStartupPricingTable: makeNodeComponent("partnerStartupPricingTable"),
    partnerAgencyPricingtable: makeNodeComponent("partnerAgencyPricingtable"),
    overlineHeadline2: makeNodeComponent("overlineHeadline2"),
    overlineHeadline24: makeNodeComponent("overlineHeadline24"),
    footerB: makeNodeComponent("footerB"),

    // Metadata about props expected for PlasmicPartnerpricing
    internalVariantProps: PlasmicPartnerpricing__VariantProps,
    internalArgProps: PlasmicPartnerpricing__ArgProps
  }
);

export default PlasmicPartnerpricing;
/* prettier-ignore-end */
