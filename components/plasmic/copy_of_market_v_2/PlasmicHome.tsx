// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4BLiU6oPcZdXDvseuPTeUa
// Component: I1M3SVLflXVIOKx
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavbarOverhead from "../../NavbarOverhead"; // plasmic-import: nnF88DTLpNW1ku/component
import NavbarHomeCta from "../../NavbarHomeCta"; // plasmic-import: j4e9sa8n2K5tpT/component
import CardFeatureDescription from "../../CardFeatureDescription"; // plasmic-import: hLrFJ-JgiWwHRG/component
import CardSignUp from "../../CardSignUp"; // plasmic-import: eHJa7ciga7ihS0/component
import CardHeaderTitleDisplay from "../../CardHeaderTitleDisplay"; // plasmic-import: fk5BRaqICb6MOmt/component
import CardImageHeadlineDescription from "../../CardImageHeadlineDescription"; // plasmic-import: Z97-BR6RPlDzUhI/component
import TextLinkUnderlinePrimary from "../../TextLinkUnderlinePrimary"; // plasmic-import: 6pY-cK_-KJMdF_/component
import ButtonLinkPrimary from "../../ButtonLinkPrimary"; // plasmic-import: tSiOWgKlHR05p7/component
import FooterB from "../../FooterB"; // plasmic-import: IZENTiSL4_zyK8/component

import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: biX3aS42hiG0fF/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_copy_of_market_v_2.module.css"; // plasmic-import: 4BLiU6oPcZdXDvseuPTeUa/projectcss
import * as sty from "./PlasmicHome.module.css"; // plasmic-import: I1M3SVLflXVIOKx/css

import Icon144Icon from "./icons/PlasmicIcon__Icon144"; // plasmic-import: LQ4wV357cgQ3A2c/icon
import GlobeAmericaIcon from "./icons/PlasmicIcon__GlobeAmerica"; // plasmic-import: 9UhcgnZMzeumqEQ/icon
import TeamPartnersIcon from "./icons/PlasmicIcon__TeamPartners"; // plasmic-import: Hf6TOd80Ag78cQq/icon
import Icon169Icon from "./icons/PlasmicIcon__Icon169"; // plasmic-import: hzDc3CsFLBB3eRG/icon
import Icon40Icon from "./icons/PlasmicIcon__Icon40"; // plasmic-import: 1tsux3HNbN3gzGe/icon
import Icon166Icon from "./icons/PlasmicIcon__Icon166"; // plasmic-import: 3ufH8cwNZIDlUuw/icon
import CircleTimeIcon from "./icons/PlasmicIcon__CircleTime"; // plasmic-import: s_LvjYrcoydlTjD/icon
import Icon133Icon from "./icons/PlasmicIcon__Icon133"; // plasmic-import: JBOVLaQh3HsRDWr/icon

export type PlasmicHome__VariantMembers = {};

export type PlasmicHome__VariantsArgs = {};
type VariantPropType = keyof PlasmicHome__VariantsArgs;
export const PlasmicHome__VariantProps = new Array<VariantPropType>();

export type PlasmicHome__ArgsType = {};
type ArgPropType = keyof PlasmicHome__ArgsType;
export const PlasmicHome__ArgProps = new Array<ArgPropType>();

export type PlasmicHome__OverridesType = {
  root?: p.Flex<"div">;
  navbarOverhead?: p.Flex<typeof NavbarOverhead>;
  navbarHomeCta?: p.Flex<typeof NavbarHomeCta>;
  heroParent?: p.Flex<"div">;
  heroTextBlock?: p.Flex<"div">;
  headlineText?: p.Flex<"div">;
  subheadText?: p.Flex<"div">;
  featuresParent?: p.Flex<"div">;
  iconBg2?: p.Flex<"div">;
  iconBg3?: p.Flex<"div">;
  signupFormHome?: p.Flex<"form">;
  cardSignUp?: p.Flex<typeof CardSignUp>;
  footerB?: p.Flex<typeof FooterB>;
};

export interface DefaultHomeProps {
  dataFetches: PlasmicHome__Fetches;
}

function PlasmicHome__RenderFunc(props: {
  variants: PlasmicHome__VariantsArgs;
  args: PlasmicHome__ArgsType;
  overrides: PlasmicHome__OverridesType;
  dataFetches?: PlasmicHome__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <Head>
        <title key="title">
          {
            "The community for digital nomads, independent professionals & remote companies | Intrepid"
          }
        </title>
        <meta
          key="og:title"
          property="og:title"
          content={
            "The community for digital nomads, independent professionals & remote companies | Intrepid"
          }
        />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={"Work and grow your business from anywhere in the world.\n"}
        />
        <meta
          key="og:image"
          property="og:image"
          content={
            "https://site-assets.plasmic.app/687bcb366d82837e6c14393bf64e6369.png"
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <NavbarOverhead
            data-plasmic-name={"navbarOverhead"}
            data-plasmic-override={overrides.navbarOverhead}
            className={classNames("__wab_instance", sty.navbarOverhead)}
          />

          <NavbarHomeCta
            data-plasmic-name={"navbarHomeCta"}
            data-plasmic-override={overrides.navbarHomeCta}
            className={classNames("__wab_instance", sty.navbarHomeCta)}
          />

          <p.Stack
            as={"div"}
            data-plasmic-name={"heroParent"}
            data-plasmic-override={overrides.heroParent}
            hasGap={true}
            className={classNames(defaultcss.all, sty.heroParent)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"heroTextBlock"}
              data-plasmic-override={overrides.heroTextBlock}
              hasGap={true}
              className={classNames(defaultcss.all, sty.heroTextBlock)}
            >
              <div
                data-plasmic-name={"headlineText"}
                data-plasmic-override={overrides.headlineText}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.headlineText
                )}
              >
                {hasVariant(globalVariants, "screen", "mobile")
                  ? "A better way to work and grow your business."
                  : hasVariant(globalVariants, "screen", "desktop")
                  ? "A better way to work and grow your business."
                  : "Join a marketplace community built for entrepreneurs and the modern way to work."}
              </div>

              <div
                data-plasmic-name={"subheadText"}
                data-plasmic-override={overrides.subheadText}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.subheadText
                )}
              >
                {hasVariant(globalVariants, "screen", "mobile")
                  ? "Start, launch, and grow a business from anywhere in the world ——buy or sell technology & creative services, collaborate with rare independent talent, get the financial services you need to live and work the way you want."
                  : hasVariant(globalVariants, "screen", "desktop")
                  ? "Start, launch, and grow a business from anywhere in the world. Buy or sell technology & creative services, collaborate with rare independent talent–– Get the financial services you need to live and work the way you want."
                  : "Start, launch, and grow a business from anywhere in the world ——buy or sell technology & creative services, collaborate with talented designers and developers, get the financial services you need to live and work the way you want."}
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"featuresParent"}
                data-plasmic-override={overrides.featuresParent}
                hasGap={true}
                className={classNames(defaultcss.all, sty.featuresParent)}
              >
                <CardFeatureDescription
                  border={"border" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardFeatureDescription__yGr7
                  )}
                  headline={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "Financial services for entrepreneurs"
                      : hasVariant(globalVariants, "screen", "desktop")
                      ? "Financial services for entrepreneurs"
                      : "Financial services for entrepreneurs"
                  }
                  iconParent={
                    <div
                      data-plasmic-name={"iconBg2"}
                      data-plasmic-override={overrides.iconBg2}
                      className={classNames(defaultcss.all, sty.iconBg2)}
                    >
                      <Icon144Icon
                        className={classNames(defaultcss.all, sty.svg___50C5A)}
                        role={"img"}
                      />
                    </div>
                  }
                  size={
                    hasVariant(globalVariants, "screen", "desktop")
                      ? ("_360" as const)
                      : undefined
                  }
                  text={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "We provide what the banks won't: P2P global payments, international accounts, escrow, and special financing for independent professionals. "
                      : hasVariant(globalVariants, "screen", "desktop")
                      ? "We provide what the banks won't: P2P global payments, international accounts, escrow, and special financing for independent professionals. "
                      : "We provide what the banks won't: P2P global payments, escrow and special financing for creative businesses. "
                  }
                />

                <CardFeatureDescription
                  border={"border" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardFeatureDescription__uqtSr
                  )}
                  headline={"Work and live from anywhere"}
                  iconParent={
                    <div
                      className={classNames(defaultcss.all, sty.freeBox__dpUbZ)}
                    >
                      <GlobeAmericaIcon
                        className={classNames(defaultcss.all, sty.svg__a1GoZ)}
                        role={"img"}
                      />
                    </div>
                  }
                  text={
                    "Quit your 9-5 and work from anywhere on your terms. Start the project or business you always dreamed of building but thought you couldn't."
                  }
                />

                <CardFeatureDescription
                  border={"border" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardFeatureDescription__j7K6D
                  )}
                  headline={"Community & collaboration"}
                  iconParent={
                    <div
                      className={classNames(defaultcss.all, sty.freeBox__clzPk)}
                    >
                      <TeamPartnersIcon
                        className={classNames(defaultcss.all, sty.svg__aMgdN)}
                        role={"img"}
                      />
                    </div>
                  }
                  text={
                    "Chat, connect, learn, and work with leading designers and technologist from around the world in real time."
                  }
                />

                <CardFeatureDescription
                  border={"border" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardFeatureDescription__sFc7G
                  )}
                  headline={"Membership perks"}
                  iconParent={
                    <div
                      data-plasmic-name={"iconBg3"}
                      data-plasmic-override={overrides.iconBg3}
                      className={classNames(defaultcss.all, sty.iconBg3)}
                    >
                      <Icon169Icon
                        className={classNames(defaultcss.all, sty.svg__z70Kk)}
                        role={"img"}
                      />
                    </div>
                  }
                  text={
                    "We've partnered with some of the worlds leading brands and fastest growing startups to get you all the tools you need to build a modern business stack."
                  }
                />

                <CardFeatureDescription
                  border={"border" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardFeatureDescription__maKn
                  )}
                  headline={"Build a remote business"}
                  iconParent={
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.freeBox__ydjZh)}
                    >
                      <Icon40Icon
                        className={classNames(defaultcss.all, sty.svg__nr5Wd)}
                        role={"img"}
                      />
                    </p.Stack>
                  }
                  text={
                    "Find rare talent and work from anywhere. Work revolves around you and your global lifestyle."
                  }
                />

                <CardFeatureDescription
                  border={"border" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardFeatureDescription__klN4W
                  )}
                  headline={"Go to market fast"}
                  iconParent={
                    <div
                      className={classNames(defaultcss.all, sty.freeBox__ovp3E)}
                    >
                      <Icon166Icon
                        className={classNames(defaultcss.all, sty.svg__jAHy3)}
                        role={"img"}
                      />
                    </div>
                  }
                  text={
                    "Launch new products faster—grow or transform your business by cutting down your development time from months to days."
                  }
                />

                <CardFeatureDescription
                  border={"border" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardFeatureDescription__fVVY
                  )}
                  headline={"Save time and money"}
                  iconParent={
                    <div
                      className={classNames(defaultcss.all, sty.freeBox__iLjGt)}
                    >
                      <CircleTimeIcon
                        className={classNames(defaultcss.all, sty.svg__b5J98)}
                        role={"img"}
                      />
                    </div>
                  }
                  text={
                    "We're a shoppable ecommerce experience, making buying, selling, and collaboration fun and easy. "
                  }
                />

                <CardFeatureDescription
                  border={"border" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardFeatureDescription___9HzWv
                  )}
                  headline={"Support small businesses"}
                  iconParent={
                    <div
                      className={classNames(defaultcss.all, sty.freeBox__bjQ6)}
                    >
                      <Icon133Icon
                        className={classNames(defaultcss.all, sty.svg__e44Fe)}
                        role={"img"}
                      />
                    </div>
                  }
                  text={
                    "Buy, sell, and collaborate with other SMEs who put their heart and soul into making something innovative."
                  }
                />
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"form"}
              data-plasmic-name={"signupFormHome"}
              data-plasmic-override={overrides.signupFormHome}
              hasGap={true}
              className={classNames(defaultcss.all, sty.signupFormHome)}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.freeBox__uGql8
                )}
              >
                {"Sign up"}
              </div>

              <CardSignUp
                data-plasmic-name={"cardSignUp"}
                data-plasmic-override={overrides.cardSignUp}
                className={classNames("__wab_instance", sty.cardSignUp)}
              />
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__dwH8)}
          >
            <div className={classNames(defaultcss.all, sty.freeBox__luLvm)}>
              <CardHeaderTitleDisplay
                className={classNames(
                  "__wab_instance",
                  sty.cardHeaderTitleDisplay__oqUkw
                )}
                headings={["title"]}
                size={
                  hasVariant(globalVariants, "screen", "mobile")
                    ? ("_360" as const)
                    : hasVariant(globalVariants, "screen", "desktop")
                    ? ("_720" as const)
                    : ("_540" as const)
                }
                slot={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__nwBs3
                    )}
                  >
                    {"Grow your business from anywhere"}
                  </div>
                }
                textSubhead={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__gVx88
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "Get custom technology and creative services from a global community of professionals ready to help you grow and succeed."
                      : hasVariant(globalVariants, "screen", "desktop")
                      ? "Get custom technology and creative services from a global community of independent professionals ready to help you grow and succeed."
                      : "A global community of professional technology creatives ready to help you grow and succeed."}
                  </div>
                }
              />
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__oyns8)}
            >
              <CardImageHeadlineDescription
                _270X270={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__aMwsR)}
                    role={"img"}
                    src={"/plasmic/copy_of_market_v_2/images/image31.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__ctAhE
                )}
                description={"description" as const}
                size={"_270X270" as const}
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline" as const}
                    size={"_24" as const}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__s1Pol
                        )}
                      >
                        {"UX Design"}
                      </div>
                    }
                  />
                }
              />

              <CardImageHeadlineDescription
                _270X270={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__iwNqY)}
                    role={"img"}
                    src={"/plasmic/copy_of_market_v_2/images/image29.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__ktXbq
                )}
                description={"description" as const}
                size={"_270X270" as const}
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline" as const}
                    size={"_24" as const}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__c9DI7
                        )}
                      >
                        {"Mobile apps"}
                      </div>
                    }
                  />
                }
              />

              <CardImageHeadlineDescription
                _270X270={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__h0Bz)}
                    role={"img"}
                    src={"/plasmic/copy_of_market_v_2/images/image11.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__p3W6E
                )}
                description={"description" as const}
                size={"_270X270" as const}
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline" as const}
                    size={"_24" as const}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__b1AG1
                        )}
                      >
                        {"No Code"}
                      </div>
                    }
                  />
                }
              />

              <CardImageHeadlineDescription
                _270X270={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__ouGEu)}
                    role={"img"}
                    src={"/plasmic/copy_of_market_v_2/images/image30.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__iFzaP
                )}
                description={"description" as const}
                size={"_270X270" as const}
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline" as const}
                    size={"_24" as const}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox___0KtOn
                        )}
                      >
                        {"Web apps"}
                      </div>
                    }
                  />
                }
              />
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__hclt0)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__jJuMb)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox___3Llva)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__jZu3)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__nUmYr
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "Business services for remote teams"
                      : hasVariant(globalVariants, "screen", "desktop")
                      ? "Business services for remote teams"
                      : "A world of services for dynamic teams"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__yrNai
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "Curated technology, busines, and creatives services designed for modern entrepreneurs."
                      : hasVariant(globalVariants, "screen", "desktop")
                      ? "Curated technology, busines, and creatives services designed for modern entrepreneurs."
                      : "Curated services and products designed for modern entrepreneurs."}
                  </div>
                </p.Stack>

                {(
                  hasVariant(globalVariants, "screen", "mobile")
                    ? true
                    : hasVariant(globalVariants, "screen", "desktop")
                    ? true
                    : false
                ) ? (
                  <ButtonLinkPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.buttonLinkPrimary___9Hrjg
                    )}
                    color={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? ("brand" as const)
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? ("brand" as const)
                        : undefined
                    }
                    destination={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? ("/member/pricing" as const)
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? ("/member/pricing" as const)
                        : undefined
                    }
                    height={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? ("_48" as const)
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? ("_40" as const)
                        : undefined
                    }
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__og0Z
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Join today"
                          : hasVariant(globalVariants, "screen", "desktop")
                          ? "Join today"
                          : "Hyper Link"}
                      </div>
                    }
                    type={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? ("fill" as const)
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? ("fill" as const)
                        : undefined
                    }
                    width={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? ("_360" as const)
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? ("_180" as const)
                        : undefined
                    }
                  />
                ) : null}
              </p.Stack>

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__nka65)}
                role={"img"}
                src={"/plasmic/copy_of_market_v_2/images/image25.png"}
              />
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox___2CQo)}
          >
            <div className={classNames(defaultcss.all, sty.freeBox__i0J2I)}>
              <CardHeaderTitleDisplay
                className={classNames(
                  "__wab_instance",
                  sty.cardHeaderTitleDisplay__zzwf5
                )}
                headings={["title"]}
                size={
                  hasVariant(globalVariants, "screen", "mobile")
                    ? ("_360" as const)
                    : ("_540" as const)
                }
                slot={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___45SF2
                    )}
                  >
                    {"Work without borders"}
                  </div>
                }
                textSubhead={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___0G3Hs
                    )}
                  >
                    {"Discover the world and work from anywhere."}
                  </div>
                }
              />
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__e42Ps)}
            >
              <CardImageHeadlineDescription
                _360X360={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img___1Ot3O)}
                    role={"img"}
                    src={"/plasmic/copy_of_market_v_2/images/image26.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__hsFub
                )}
                size={"_360X360" as const}
                subheadParent={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__tT5My
                    )}
                  >
                    {
                      "Unique places around the world for work, productivity, and inspiration."
                    }
                  </div>
                }
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline" as const}
                    size={"_24" as const}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__a92J
                        )}
                      >
                        {"Destinations"}
                      </div>
                    }
                  />
                }
              />

              <CardImageHeadlineDescription
                _360X360={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__oXwev)}
                    role={"img"}
                    src={"/plasmic/copy_of_market_v_2/images/image27.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__yvkho
                )}
                size={"_360X360" as const}
                subheadParent={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__inZmm
                    )}
                  >
                    {
                      "Get work done and connect with like minded people from around the world."
                    }
                  </div>
                }
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline" as const}
                    size={"_24" as const}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__aka7R
                        )}
                      >
                        {"Workspaces"}
                      </div>
                    }
                  />
                }
              />

              <CardImageHeadlineDescription
                _360X360={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img___8UrqH)}
                    role={"img"}
                    src={"/plasmic/copy_of_market_v_2/images/image33.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__nhiXz
                )}
                size={"_360X360" as const}
                subheadParent={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__zyhsG
                    )}
                  >
                    {
                      "Your home and neighborhood community in any city or country."
                    }
                  </div>
                }
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline" as const}
                    size={"_24" as const}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__n7Yrp
                        )}
                      >
                        {"Livespaces"}
                      </div>
                    }
                  />
                }
              />
            </p.Stack>
          </p.Stack>

          <div className={classNames(defaultcss.all, sty.freeBox__xRrRq)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__sqS)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__crwzR)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__dBxL)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__tjnsI
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "Destination venues, events, and meetups for remote companies"
                      : hasVariant(globalVariants, "screen", "desktop")
                      ? "Destination venues, events, and meetups for remote companies"
                      : "Destination meetups for remote teams"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___271Ej
                    )}
                  >
                    {
                      "Activities and experiences for building culture and lasting bonds."
                    }
                  </div>
                </p.Stack>

                {(
                  hasVariant(globalVariants, "screen", "mobile")
                    ? true
                    : hasVariant(globalVariants, "screen", "desktop")
                    ? true
                    : false
                ) ? (
                  <ButtonLinkPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.buttonLinkPrimary__hKl6C
                    )}
                    color={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? ("brand" as const)
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? ("brand" as const)
                        : undefined
                    }
                    destination={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? ("/member/pricing" as const)
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? ("/member/pricing" as const)
                        : undefined
                    }
                    height={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? ("_48" as const)
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? ("_40" as const)
                        : undefined
                    }
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox___0Unl
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Get inspired"
                          : hasVariant(globalVariants, "screen", "desktop")
                          ? "Get inspired"
                          : "Hyper Link"}
                      </div>
                    }
                    type={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? ("fill" as const)
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? ("fill" as const)
                        : undefined
                    }
                    width={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? ("_360" as const)
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? ("_180" as const)
                        : undefined
                    }
                  />
                ) : null}
              </p.Stack>

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__ij6Ne)}
                role={"img"}
                src={"/plasmic/copy_of_market_v_2/images/image23.png"}
              />
            </p.Stack>
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__pzFn0)}
          >
            <div className={classNames(defaultcss.all, sty.freeBox__yZfzE)}>
              <CardHeaderTitleDisplay
                className={classNames(
                  "__wab_instance",
                  sty.cardHeaderTitleDisplay__ik2Sv
                )}
                headings={["title"]}
                size={
                  hasVariant(globalVariants, "screen", "mobile")
                    ? ("_360" as const)
                    : hasVariant(globalVariants, "screen", "desktop")
                    ? ("_720" as const)
                    : ("_540" as const)
                }
                slot={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__ettjw
                    )}
                  >
                    {"Follow your passion"}
                  </div>
                }
                textSubhead={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__aXdfp
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "Inspire and get inspired—host, teach, or join experiences that make a difference in your life and business."
                      : hasVariant(globalVariants, "screen", "desktop")
                      ? "Inspire and get inspired—host, teach, or join experiences that make a difference in your life and business."
                      : "Inspire and get inspired—host, teach, or join experiences that make a difference"}
                  </div>
                }
              />
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__ohI6)}
            >
              <CardImageHeadlineDescription
                _360X360={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__c1JP)}
                    role={"img"}
                    src={"/plasmic/copy_of_market_v_2/images/image18.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__gkc6Q
                )}
                size={"_360X360" as const}
                subheadParent={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__us9Rh
                    )}
                  >
                    {
                      "Business networking, meetups, and interest groups by industry professionals"
                    }
                  </div>
                }
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline" as const}
                    size={"_24" as const}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__sOok0
                        )}
                      >
                        {"Live events"}
                      </div>
                    }
                  />
                }
              />

              <CardImageHeadlineDescription
                _360X360={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img___9K2K)}
                    role={"img"}
                    src={"/plasmic/copy_of_market_v_2/images/image22.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__bsK4
                )}
                size={"_360X360" as const}
                subheadParent={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__gKly0
                    )}
                  >
                    {
                      "Live and interactive experiences lead by community partners."
                    }
                  </div>
                }
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline" as const}
                    size={"_24" as const}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__hyyLj
                        )}
                      >
                        {"Online experiences"}
                      </div>
                    }
                  />
                }
              />

              <CardImageHeadlineDescription
                _360X360={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__lRdiD)}
                    role={"img"}
                    src={"/plasmic/copy_of_market_v_2/images/image21.png"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.cardImageHeadlineDescription__wJa
                )}
                size={"_360X360" as const}
                subheadParent={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___8Kt7
                    )}
                  >
                    {
                      "Get the help you need, when you need it from professionals who understand you."
                    }
                  </div>
                }
                textLinkHeadlineParent={
                  <TextLinkUnderlinePrimary
                    color={"headline" as const}
                    size={"_24" as const}
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__l7Hx
                        )}
                      >
                        {"Professional coaching"}
                      </div>
                    }
                  />
                }
              />
            </p.Stack>
          </p.Stack>

          <div className={classNames(defaultcss.all, sty.freeBox__cm6H1)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__pb9X6)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__uFTco)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__iejCq)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__lxjd8
                    )}
                  >
                    {"Become a partner"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__qprw6
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "desktop")
                      ? "Sell your professional business, technology & creative services—grow a global business by sharing your talents."
                      : "Sell your professional technology & creative services—grow a global business by sharing your talents."}
                  </div>
                </p.Stack>

                {(
                  hasVariant(globalVariants, "screen", "mobile")
                    ? true
                    : hasVariant(globalVariants, "screen", "desktop")
                    ? true
                    : false
                ) ? (
                  <ButtonLinkPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.buttonLinkPrimary__r4J8I
                    )}
                    color={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? ("brand" as const)
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? ("brand" as const)
                        : undefined
                    }
                    destination={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? ("/partner/pricing" as const)
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? ("/partner/pricing" as const)
                        : undefined
                    }
                    height={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? ("_48" as const)
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? ("_40" as const)
                        : undefined
                    }
                    text={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox___8M13G
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Learn more"
                          : hasVariant(globalVariants, "screen", "desktop")
                          ? "Learn more"
                          : "Hyper Link"}
                      </div>
                    }
                    type={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? ("fill" as const)
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? ("fill" as const)
                        : undefined
                    }
                    width={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? ("_360" as const)
                        : hasVariant(globalVariants, "screen", "desktop")
                        ? ("_180" as const)
                        : undefined
                    }
                  />
                ) : null}
              </p.Stack>

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__j3CeI)}
                role={"img"}
                src={"/plasmic/copy_of_market_v_2/images/image32.png"}
              />
            </p.Stack>
          </div>

          <FooterB
            data-plasmic-name={"footerB"}
            data-plasmic-override={overrides.footerB}
            className={classNames("__wab_instance", sty.footerB)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbarOverhead",
    "navbarHomeCta",
    "heroParent",
    "heroTextBlock",
    "headlineText",
    "subheadText",
    "featuresParent",
    "iconBg2",
    "iconBg3",
    "signupFormHome",
    "cardSignUp",
    "footerB"
  ],
  navbarOverhead: ["navbarOverhead"],
  navbarHomeCta: ["navbarHomeCta"],
  heroParent: [
    "heroParent",
    "heroTextBlock",
    "headlineText",
    "subheadText",
    "featuresParent",
    "iconBg2",
    "iconBg3",
    "signupFormHome",
    "cardSignUp"
  ],
  heroTextBlock: [
    "heroTextBlock",
    "headlineText",
    "subheadText",
    "featuresParent",
    "iconBg2",
    "iconBg3"
  ],
  headlineText: ["headlineText"],
  subheadText: ["subheadText"],
  featuresParent: ["featuresParent", "iconBg2", "iconBg3"],
  iconBg2: ["iconBg2"],
  iconBg3: ["iconBg3"],
  signupFormHome: ["signupFormHome", "cardSignUp"],
  cardSignUp: ["cardSignUp"],
  footerB: ["footerB"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbarOverhead: typeof NavbarOverhead;
  navbarHomeCta: typeof NavbarHomeCta;
  heroParent: "div";
  heroTextBlock: "div";
  headlineText: "div";
  subheadText: "div";
  featuresParent: "div";
  iconBg2: "div";
  iconBg3: "div";
  signupFormHome: "form";
  cardSignUp: typeof CardSignUp;
  footerB: typeof FooterB;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHome__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHome__VariantsArgs;
    args?: PlasmicHome__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicHome__Fetches;
  } & Omit<PlasmicHome__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHome__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHome__ArgProps,
      internalVariantPropNames: PlasmicHome__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbarOverhead: makeNodeComponent("navbarOverhead"),
    navbarHomeCta: makeNodeComponent("navbarHomeCta"),
    heroParent: makeNodeComponent("heroParent"),
    heroTextBlock: makeNodeComponent("heroTextBlock"),
    headlineText: makeNodeComponent("headlineText"),
    subheadText: makeNodeComponent("subheadText"),
    featuresParent: makeNodeComponent("featuresParent"),
    iconBg2: makeNodeComponent("iconBg2"),
    iconBg3: makeNodeComponent("iconBg3"),
    signupFormHome: makeNodeComponent("signupFormHome"),
    cardSignUp: makeNodeComponent("cardSignUp"),
    footerB: makeNodeComponent("footerB"),

    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
