// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4BLiU6oPcZdXDvseuPTeUa
// Component: llBYQzLu8zpEc-f
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavbarInternal from "../../NavbarInternal"; // plasmic-import: nBfIHHqHvjUywN9/component
import CardHeaderTitleDisplay from "../../CardHeaderTitleDisplay"; // plasmic-import: fk5BRaqICb6MOmt/component
import ChipUserProfile from "../../ChipUserProfile"; // plasmic-import: Bxpx-jQAWOTDxtF/component
import CardServiceDisplay from "../../CardServiceDisplay"; // plasmic-import: 3r1WiULCCTnt4U2/component
import FooterB from "../../FooterB"; // plasmic-import: IZENTiSL4_zyK8/component

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_copy_of_market_v_2.module.css"; // plasmic-import: 4BLiU6oPcZdXDvseuPTeUa/projectcss
import * as sty from "./PlasmicMarket.module.css"; // plasmic-import: llBYQzLu8zpEc-f/css

export type PlasmicMarket__VariantMembers = {};

export type PlasmicMarket__VariantsArgs = {};
type VariantPropType = keyof PlasmicMarket__VariantsArgs;
export const PlasmicMarket__VariantProps = new Array<VariantPropType>();

export type PlasmicMarket__ArgsType = {};
type ArgPropType = keyof PlasmicMarket__ArgsType;
export const PlasmicMarket__ArgProps = new Array<ArgPropType>();

export type PlasmicMarket__OverridesType = {
  root?: p.Flex<"div">;
  navbarInternal?: p.Flex<typeof NavbarInternal>;
  sectionMarketHeadline?: p.Flex<"div">;
  sectionNewServiceListings?: p.Flex<"div">;
  sectionServiceCollections?: p.Flex<"div">;
  footerB?: p.Flex<typeof FooterB>;
};

export interface DefaultMarketProps {
  dataFetches: PlasmicMarket__Fetches;
}

function PlasmicMarket__RenderFunc(props: {
  variants: PlasmicMarket__VariantsArgs;
  args: PlasmicMarket__ArgsType;
  overrides: PlasmicMarket__OverridesType;
  dataFetches?: PlasmicMarket__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  return (
    <React.Fragment>
      <Head>
        <title key="title">{""}</title>
        <meta key="og:title" property="og:title" content={""} />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={""}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <NavbarInternal
            data-plasmic-name={"navbarInternal"}
            data-plasmic-override={overrides.navbarInternal}
            className={classNames("__wab_instance", sty.navbarInternal)}
          />

          <div
            data-plasmic-name={"sectionMarketHeadline"}
            data-plasmic-override={overrides.sectionMarketHeadline}
            className={classNames(defaultcss.all, sty.sectionMarketHeadline)}
          >
            <CardHeaderTitleDisplay
              className={classNames(
                "__wab_instance",
                sty.cardHeaderTitleDisplay__eXoWy
              )}
              headings={[]}
              size={"_360" as const}
              slot={"Services"}
              textDisplay={"Market"}
              textSubhead={
                "Discover unique services to start, launch, and grow your business."
              }
            />
          </div>

          <p.Stack
            as={"div"}
            data-plasmic-name={"sectionNewServiceListings"}
            data-plasmic-override={overrides.sectionNewServiceListings}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              sty.sectionNewServiceListings
            )}
          >
            <CardHeaderTitleDisplay
              className={classNames(
                "__wab_instance",
                sty.cardHeaderTitleDisplay__zHHa6
              )}
              headings={["title"]}
              slot={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__eHD1
                  )}
                >
                  {"New partners"}
                </div>
              }
              textSubhead={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__bAUwV
                  )}
                >
                  {"Who's new and who's hot within the commmunity."}
                </div>
              }
            />

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox___2Ngxj)}
            >
              <CardHeaderTitleDisplay
                className={classNames(
                  "__wab_instance",
                  sty.cardHeaderTitleDisplay___9V6Ln
                )}
                headings={["title", "headline"]}
                textSubhead={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__ai5VI
                    )}
                  >
                    {"Rising stars"}
                  </div>
                }
              />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__p6DyY)}
              >
                <ChipUserProfile
                  attributes={["rating"]}
                  className={classNames(
                    "__wab_instance",
                    sty.chipUserProfile__dD1Is
                  )}
                />

                <ChipUserProfile
                  attributes={["rating"]}
                  className={classNames(
                    "__wab_instance",
                    sty.chipUserProfile__rATy
                  )}
                />

                <ChipUserProfile
                  attributes={["rating"]}
                  className={classNames(
                    "__wab_instance",
                    sty.chipUserProfile__oYpss
                  )}
                />

                <ChipUserProfile
                  attributes={["rating"]}
                  className={classNames(
                    "__wab_instance",
                    sty.chipUserProfile__fwCJy
                  )}
                />

                <ChipUserProfile
                  attributes={["rating"]}
                  className={classNames(
                    "__wab_instance",
                    sty.chipUserProfile__v3E
                  )}
                />

                <ChipUserProfile
                  attributes={["rating"]}
                  className={classNames(
                    "__wab_instance",
                    sty.chipUserProfile___1V30O
                  )}
                />
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__cx72W)}
            >
              <CardHeaderTitleDisplay
                className={classNames(
                  "__wab_instance",
                  sty.cardHeaderTitleDisplay__xiXre
                )}
                headings={["title", "headline"]}
                textSubhead={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___31P9T
                    )}
                  >
                    {"New & noteworthy"}
                  </div>
                }
              />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__wMblm)}
              >
                <ChipUserProfile
                  attributes={["rating"]}
                  className={classNames(
                    "__wab_instance",
                    sty.chipUserProfile___6DRLj
                  )}
                />

                <ChipUserProfile
                  attributes={["rating"]}
                  className={classNames(
                    "__wab_instance",
                    sty.chipUserProfile__twxpB
                  )}
                />

                <ChipUserProfile
                  attributes={["rating"]}
                  className={classNames(
                    "__wab_instance",
                    sty.chipUserProfile__eSvUi
                  )}
                />

                <ChipUserProfile
                  attributes={["rating"]}
                  className={classNames(
                    "__wab_instance",
                    sty.chipUserProfile__uov8J
                  )}
                />

                <ChipUserProfile
                  attributes={["rating"]}
                  className={classNames(
                    "__wab_instance",
                    sty.chipUserProfile___6RsJx
                  )}
                />

                <ChipUserProfile
                  attributes={["rating"]}
                  className={classNames(
                    "__wab_instance",
                    sty.chipUserProfile___8V7Um
                  )}
                />
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            data-plasmic-name={"sectionServiceCollections"}
            data-plasmic-override={overrides.sectionServiceCollections}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              sty.sectionServiceCollections
            )}
          >
            <CardHeaderTitleDisplay
              className={classNames(
                "__wab_instance",
                sty.cardHeaderTitleDisplay__l1Vaa
              )}
              headings={["title"]}
              slot={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__ox5Hs
                  )}
                >
                  {"Personalised selection"}
                </div>
              }
              textSubhead={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__szbrV
                  )}
                >
                  {
                    "A selection based on your search history, saves, and purchases and member profile."
                  }
                </div>
              }
            />

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__jUd8R)}
            >
              <CardServiceDisplay
                boost={"boost" as const}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__hdGp2
                )}
                membership={"membership" as const}
                price={"price" as const}
                rating={"rating" as const}
                size={"_270X270" as const}
                userStats={"userStats" as const}
                verification={"verification" as const}
              />

              <CardServiceDisplay
                boost={"boost" as const}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__cQn5J
                )}
                membership={"membership" as const}
                price={"price" as const}
                rating={"rating" as const}
                size={"_270X270" as const}
                userStats={"userStats" as const}
                verification={"verification" as const}
              />

              <CardServiceDisplay
                boost={"boost" as const}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__ftDWn
                )}
                membership={"membership" as const}
                price={"price" as const}
                rating={"rating" as const}
                size={"_270X270" as const}
                userStats={"userStats" as const}
                verification={"verification" as const}
              />

              <CardServiceDisplay
                boost={"boost" as const}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__v96Do
                )}
                membership={"membership" as const}
                price={"price" as const}
                rating={"rating" as const}
                size={"_270X270" as const}
                userStats={"userStats" as const}
                verification={"verification" as const}
              />

              <CardServiceDisplay
                boost={"boost" as const}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__guEw
                )}
                membership={"membership" as const}
                price={"price" as const}
                rating={"rating" as const}
                size={"_270X270" as const}
                userStats={"userStats" as const}
                verification={"verification" as const}
              />

              <CardServiceDisplay
                boost={"boost" as const}
                className={classNames(
                  "__wab_instance",
                  sty.cardServiceDisplay__xNuxd
                )}
                membership={"membership" as const}
                price={"price" as const}
                rating={"rating" as const}
                size={"_270X270" as const}
                userStats={"userStats" as const}
                verification={"verification" as const}
              />
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__owbvX)}
            >
              <CardHeaderTitleDisplay
                className={classNames(
                  "__wab_instance",
                  sty.cardHeaderTitleDisplay__wqmLh
                )}
                headings={["title"]}
                slot={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___4DqCb
                    )}
                  >
                    {"Popular & trending"}
                  </div>
                }
                textSubhead={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__mqzAu
                    )}
                  >
                    {"See what's popular and trending across the community."}
                  </div>
                }
              />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__b7Jcj)}
              >
                <CardServiceDisplay
                  boost={"boost" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardServiceDisplay___6Go
                  )}
                  membership={"membership" as const}
                  price={"price" as const}
                  rating={"rating" as const}
                  size={"_270X270" as const}
                  userStats={"userStats" as const}
                  verification={"verification" as const}
                />

                <CardServiceDisplay
                  boost={"boost" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardServiceDisplay__uxbCc
                  )}
                  membership={"membership" as const}
                  price={"price" as const}
                  rating={"rating" as const}
                  size={"_270X270" as const}
                  userStats={"userStats" as const}
                  verification={"verification" as const}
                />

                <CardServiceDisplay
                  boost={"boost" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardServiceDisplay___4QkiT
                  )}
                  membership={"membership" as const}
                  price={"price" as const}
                  rating={"rating" as const}
                  size={"_270X270" as const}
                  userStats={"userStats" as const}
                  verification={"verification" as const}
                />

                <CardServiceDisplay
                  boost={"boost" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardServiceDisplay__leMGq
                  )}
                  membership={"membership" as const}
                  price={"price" as const}
                  rating={"rating" as const}
                  size={"_270X270" as const}
                  userStats={"userStats" as const}
                  verification={"verification" as const}
                />

                <CardServiceDisplay
                  boost={"boost" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardServiceDisplay__ubC3M
                  )}
                  membership={"membership" as const}
                  price={"price" as const}
                  rating={"rating" as const}
                  size={"_270X270" as const}
                  userStats={"userStats" as const}
                  verification={"verification" as const}
                />

                <CardServiceDisplay
                  boost={"boost" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardServiceDisplay___8Vnh2
                  )}
                  membership={"membership" as const}
                  price={"price" as const}
                  rating={"rating" as const}
                  size={"_270X270" as const}
                  userStats={"userStats" as const}
                  verification={"verification" as const}
                />
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__gcUyD)}
            >
              <CardHeaderTitleDisplay
                className={classNames(
                  "__wab_instance",
                  sty.cardHeaderTitleDisplay__itT
                )}
                headings={["title"]}
                slot={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__jhIOm
                    )}
                  >
                    {"Go to market fast"}
                  </div>
                }
                textSubhead={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__oj4Tj
                    )}
                  >
                    {
                      "A selection of services that will help you launch your next project."
                    }
                  </div>
                }
              />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__ynU6A)}
              >
                <CardServiceDisplay
                  boost={"boost" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardServiceDisplay__cYqvt
                  )}
                  membership={"membership" as const}
                  price={"price" as const}
                  rating={"rating" as const}
                  size={"_270X270" as const}
                  userStats={"userStats" as const}
                  verification={"verification" as const}
                />

                <CardServiceDisplay
                  boost={"boost" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardServiceDisplay__dcO69
                  )}
                  membership={"membership" as const}
                  price={"price" as const}
                  rating={"rating" as const}
                  size={"_270X270" as const}
                  userStats={"userStats" as const}
                  verification={"verification" as const}
                />

                <CardServiceDisplay
                  boost={"boost" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardServiceDisplay__ku5MR
                  )}
                  membership={"membership" as const}
                  price={"price" as const}
                  rating={"rating" as const}
                  size={"_270X270" as const}
                  userStats={"userStats" as const}
                  verification={"verification" as const}
                />

                <CardServiceDisplay
                  boost={"boost" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardServiceDisplay__nd20
                  )}
                  membership={"membership" as const}
                  price={"price" as const}
                  rating={"rating" as const}
                  size={"_270X270" as const}
                  userStats={"userStats" as const}
                  verification={"verification" as const}
                />

                <CardServiceDisplay
                  boost={"boost" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardServiceDisplay__wzyKp
                  )}
                  membership={"membership" as const}
                  price={"price" as const}
                  rating={"rating" as const}
                  size={"_270X270" as const}
                  userStats={"userStats" as const}
                  verification={"verification" as const}
                />

                <CardServiceDisplay
                  boost={"boost" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.cardServiceDisplay___90T35
                  )}
                  membership={"membership" as const}
                  price={"price" as const}
                  rating={"rating" as const}
                  size={"_270X270" as const}
                  userStats={"userStats" as const}
                  verification={"verification" as const}
                />
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <FooterB
            data-plasmic-name={"footerB"}
            data-plasmic-override={overrides.footerB}
            className={classNames("__wab_instance", sty.footerB)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbarInternal",
    "sectionMarketHeadline",
    "sectionNewServiceListings",
    "sectionServiceCollections",
    "footerB"
  ],
  navbarInternal: ["navbarInternal"],
  sectionMarketHeadline: ["sectionMarketHeadline"],
  sectionNewServiceListings: ["sectionNewServiceListings"],
  sectionServiceCollections: ["sectionServiceCollections"],
  footerB: ["footerB"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbarInternal: typeof NavbarInternal;
  sectionMarketHeadline: "div";
  sectionNewServiceListings: "div";
  sectionServiceCollections: "div";
  footerB: typeof FooterB;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicMarket__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicMarket__VariantsArgs;
    args?: PlasmicMarket__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicMarket__Fetches;
  } & Omit<PlasmicMarket__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicMarket__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicMarket__ArgProps,
      internalVariantPropNames: PlasmicMarket__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicMarket__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicMarket";
  } else {
    func.displayName = `PlasmicMarket.${nodeName}`;
  }
  return func;
}

export const PlasmicMarket = Object.assign(
  // Top-level PlasmicMarket renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbarInternal: makeNodeComponent("navbarInternal"),
    sectionMarketHeadline: makeNodeComponent("sectionMarketHeadline"),
    sectionNewServiceListings: makeNodeComponent("sectionNewServiceListings"),
    sectionServiceCollections: makeNodeComponent("sectionServiceCollections"),
    footerB: makeNodeComponent("footerB"),

    // Metadata about props expected for PlasmicMarket
    internalVariantProps: PlasmicMarket__VariantProps,
    internalArgProps: PlasmicMarket__ArgProps
  }
);

export default PlasmicMarket;
/* prettier-ignore-end */
