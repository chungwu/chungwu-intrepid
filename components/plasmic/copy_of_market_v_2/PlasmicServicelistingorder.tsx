// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4BLiU6oPcZdXDvseuPTeUa
// Component: HZXBRPubDnTctG
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavbarServiceListing from "../../NavbarServiceListing"; // plasmic-import: CjIIrelyshy5Wa/component
import ProgressBar from "../../ProgressBar"; // plasmic-import: L1r4sBRgwURapY/component
import InputCheckoutItem from "../../InputCheckoutItem"; // plasmic-import: ajtBfjoVnJk_2T/component
import ToggleCheckoutItem from "../../ToggleCheckoutItem"; // plasmic-import: tUA22-wUuDKgcR/component
import ToggleSubscriptionCard from "../../ToggleSubscriptionCard"; // plasmic-import: ev2zgnRoIomYPd/component
import Accordion from "../../Accordion"; // plasmic-import: 1ZJCGR7JIrafEd/component
import TextLinkUnderlinePrimary from "../../TextLinkUnderlinePrimary"; // plasmic-import: 6pY-cK_-KJMdF_/component
import ServiceProcessCard from "../../ServiceProcessCard"; // plasmic-import: 1y8tRQlAIZcidK/component
import ServiceFeatureB from "../../ServiceFeatureB"; // plasmic-import: gguWVOD6YzvVuS/component
import ServiceFeatureCard from "../../ServiceFeatureCard"; // plasmic-import: ROhXrEmZhHUraZ/component
import ChipBadgeDisplay from "../../ChipBadgeDisplay"; // plasmic-import: SSFk1BeJq0HW6X/component
import CheckoutServiceListing from "../../CheckoutServiceListing"; // plasmic-import: QvB81mmF62BJiNV/component
import FooterServiceListing from "../../FooterServiceListing"; // plasmic-import: KdJma6zoTnjpLW/component

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_copy_of_market_v_2.module.css"; // plasmic-import: 4BLiU6oPcZdXDvseuPTeUa/projectcss
import * as sty from "./PlasmicServicelistingorder.module.css"; // plasmic-import: HZXBRPubDnTctG/css

import CellDividerIcon from "./icons/PlasmicIcon__CellDivider"; // plasmic-import: 0houBrn4b8rrzS3/icon
import Icon111Icon from "./icons/PlasmicIcon__Icon111"; // plasmic-import: bs7hcDR6K9Xgoi3/icon
import PlusBoldIcon from "./icons/PlasmicIcon__PlusBold"; // plasmic-import: lhSEEajPJGZatfD/icon
import Icon170Icon from "./icons/PlasmicIcon__Icon170"; // plasmic-import: 8dZnFQrWLcwMPnF/icon
import Icon114Icon from "./icons/PlasmicIcon__Icon114"; // plasmic-import: VfXaOZlZvq_xDZf/icon

export type PlasmicServicelistingorder__VariantMembers = {};

export type PlasmicServicelistingorder__VariantsArgs = {};
type VariantPropType = keyof PlasmicServicelistingorder__VariantsArgs;
export const PlasmicServicelistingorder__VariantProps =
  new Array<VariantPropType>();

export type PlasmicServicelistingorder__ArgsType = {};
type ArgPropType = keyof PlasmicServicelistingorder__ArgsType;
export const PlasmicServicelistingorder__ArgProps = new Array<ArgPropType>();

export type PlasmicServicelistingorder__OverridesType = {
  root?: p.Flex<"div">;
  serviceListingNavbar?: p.Flex<"div">;
  navbarServiceListing?: p.Flex<typeof NavbarServiceListing>;
  progressBar?: p.Flex<typeof ProgressBar>;
  orderParent?: p.Flex<"div">;
  orderHeadlineTitleImage?: p.Flex<"div">;
  orderImageHeroBlock?: p.Flex<"div">;
  img?: p.Flex<"img">;
  orderInputBlock?: p.Flex<"div">;
  orderListingInput?: p.Flex<typeof InputCheckoutItem>;
  orderPlacementInput?: p.Flex<typeof ToggleCheckoutItem>;
  orderSubscriptionInput?: p.Flex<typeof ToggleCheckoutItem>;
  summaryCheckoutBlock?: p.Flex<"div">;
  orderCheckoutSummaryReviewBody?: p.Flex<"div">;
  orderDescriptionCheckoutBlock?: p.Flex<"div">;
  serviceDescriptionOverview?: p.Flex<"div">;
  orderProcessCheckoutBlock?: p.Flex<"div">;
  serviceProcessDescription?: p.Flex<"div">;
  orderFeaturesCheckoutBlock?: p.Flex<"div">;
  orderContentCheckoutBlock?: p.Flex<"div">;
  orderMethodCheckoutBlock?: p.Flex<"div">;
  orderToolsCheckoutBlock?: p.Flex<"div">;
  orderFormatCheckoutBlock?: p.Flex<"div">;
  orderRequirementCheckoutBlock?: p.Flex<"div">;
  orderTermsCheckoutBlock?: p.Flex<"div">;
  checkoutServiceListing?: p.Flex<typeof CheckoutServiceListing>;
  footerServiceListing?: p.Flex<typeof FooterServiceListing>;
};

export interface DefaultServicelistingorderProps {
  dataFetches: PlasmicServicelistingorder__Fetches;
}

function PlasmicServicelistingorder__RenderFunc(props: {
  variants: PlasmicServicelistingorder__VariantsArgs;
  args: PlasmicServicelistingorder__ArgsType;
  overrides: PlasmicServicelistingorder__OverridesType;
  dataFetches?: PlasmicServicelistingorder__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  return (
    <React.Fragment>
      <Head>
        <title key="title">{""}</title>
        <meta key="og:title" property="og:title" content={""} />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={""}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"serviceListingNavbar"}
            data-plasmic-override={overrides.serviceListingNavbar}
            className={classNames(defaultcss.all, sty.serviceListingNavbar)}
          >
            <NavbarServiceListing
              data-plasmic-name={"navbarServiceListing"}
              data-plasmic-override={overrides.navbarServiceListing}
              className={classNames("__wab_instance", sty.navbarServiceListing)}
              state={"checkout" as const}
            >
              {"Order"}
            </NavbarServiceListing>

            <ProgressBar
              data-plasmic-name={"progressBar"}
              data-plasmic-override={overrides.progressBar}
              className={classNames("__wab_instance", sty.progressBar)}
              progress={"_90" as const}
            />
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__o2N9X)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"orderParent"}
              data-plasmic-override={overrides.orderParent}
              hasGap={true}
              className={classNames(defaultcss.all, sty.orderParent)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"orderHeadlineTitleImage"}
                data-plasmic-override={overrides.orderHeadlineTitleImage}
                hasGap={true}
                className={classNames(
                  defaultcss.all,
                  sty.orderHeadlineTitleImage
                )}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__z1Q9N
                  )}
                >
                  {"Your Order"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"orderImageHeroBlock"}
                  data-plasmic-override={overrides.orderImageHeroBlock}
                  hasGap={true}
                  className={classNames(
                    defaultcss.all,
                    sty.orderImageHeroBlock
                  )}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox__zUoY)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__rtBRs
                      )}
                    >
                      {"Service title"}
                    </div>

                    <div
                      className={classNames(defaultcss.all, sty.freeBox__srlWt)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.freeBox___7Bcsk
                        )}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox__d834U
                          )}
                        >
                          {"Category"}
                        </div>

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox___1Pr51
                          )}
                        >
                          {"|"}
                        </div>

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox__v4ToD
                          )}
                        >
                          {"Service"}
                        </div>
                      </p.Stack>
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox__hhFn7)}
                  >
                    <div
                      className={classNames(defaultcss.all, sty.freeBox__z4ZCe)}
                    >
                      <img
                        data-plasmic-name={"img"}
                        data-plasmic-override={overrides.img}
                        alt={""}
                        className={classNames(defaultcss.img, sty.img)}
                        role={"img"}
                      />
                    </div>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        defaultcss.all,
                        sty.freeBox___5P9Cq
                      )}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.freeBox__dcCyi
                        )}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox__x5NMr
                          )}
                        >
                          {"By"}
                        </div>

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox__p9GHr
                          )}
                        >
                          {"CompanyName"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.freeBox__zYFjg
                        )}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox__vPwub
                          )}
                        >
                          {"$"}
                        </div>

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox__bBrsc
                          )}
                        >
                          {"000.00"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>

              <CellDividerIcon
                className={classNames(defaultcss.all, sty.svg___4Ye7G)}
                role={"img"}
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"orderInputBlock"}
                data-plasmic-override={overrides.orderInputBlock}
                hasGap={true}
                className={classNames(defaultcss.all, sty.orderInputBlock)}
              >
                <InputCheckoutItem
                  data-plasmic-name={"orderListingInput"}
                  data-plasmic-override={overrides.orderListingInput}
                  className={classNames(
                    "__wab_instance",
                    sty.orderListingInput
                  )}
                  slot={"Service"}
                  slot2={"Listing"}
                >
                  {"Add additional drafts of this service."}
                </InputCheckoutItem>

                <ToggleCheckoutItem
                  data-plasmic-name={"orderPlacementInput"}
                  data-plasmic-override={overrides.orderPlacementInput}
                  className={classNames(
                    "__wab_instance",
                    sty.orderPlacementInput
                  )}
                  slot={"Placement"}
                  slot2={
                    <ToggleSubscriptionCard inactive={"placement" as const} />
                  }
                >
                  {"Get priority placement in search"}
                </ToggleCheckoutItem>

                <ToggleCheckoutItem
                  data-plasmic-name={"orderSubscriptionInput"}
                  data-plasmic-override={overrides.orderSubscriptionInput}
                  className={classNames(
                    "__wab_instance",
                    sty.orderSubscriptionInput
                  )}
                  slot={"Subscription"}
                  slot2={<ToggleSubscriptionCard />}
                >
                  {"Get 30% off when you switch to annual."}
                </ToggleCheckoutItem>
              </p.Stack>

              <CellDividerIcon
                className={classNames(defaultcss.all, sty.svg__foC8H)}
                role={"img"}
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"summaryCheckoutBlock"}
                data-plasmic-override={overrides.summaryCheckoutBlock}
                hasGap={true}
                className={classNames(defaultcss.all, sty.summaryCheckoutBlock)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__xHnmi
                  )}
                >
                  {"Summary"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"orderCheckoutSummaryReviewBody"}
                  data-plasmic-override={
                    overrides.orderCheckoutSummaryReviewBody
                  }
                  hasGap={true}
                  className={classNames(
                    defaultcss.all,
                    sty.orderCheckoutSummaryReviewBody
                  )}
                >
                  <div
                    data-plasmic-name={"orderDescriptionCheckoutBlock"}
                    data-plasmic-override={
                      overrides.orderDescriptionCheckoutBlock
                    }
                    className={classNames(
                      defaultcss.all,
                      sty.orderDescriptionCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion___0SGQj
                      )}
                      size={"_360" as const}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__rcbno
                        )}
                      >
                        {"Description"}
                      </div>
                    </Accordion>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"serviceDescriptionOverview"}
                      data-plasmic-override={
                        overrides.serviceDescriptionOverview
                      }
                      hasGap={true}
                      className={classNames(
                        defaultcss.all,
                        sty.serviceDescriptionOverview
                      )}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__oF7L7
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis "
                        }
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          sty.freeBox__rfXht
                        )}
                      >
                        <TextLinkUnderlinePrimary
                          text={
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.freeBox__uoHUs
                              )}
                            >
                              {"Edit"}
                            </div>
                          }
                        />
                      </div>
                    </p.Stack>
                  </div>

                  <div
                    data-plasmic-name={"orderProcessCheckoutBlock"}
                    data-plasmic-override={overrides.orderProcessCheckoutBlock}
                    className={classNames(
                      defaultcss.all,
                      sty.orderProcessCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion___40MtD
                      )}
                      size={"_360" as const}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__wGbL
                        )}
                      >
                        {"Process"}
                      </div>
                    </Accordion>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"serviceProcessDescription"}
                      data-plasmic-override={
                        overrides.serviceProcessDescription
                      }
                      hasGap={true}
                      className={classNames(
                        defaultcss.all,
                        sty.serviceProcessDescription
                      )}
                    >
                      <ServiceProcessCard
                        className={classNames(
                          "__wab_instance",
                          sty.serviceProcessCard___0K9Kk
                        )}
                        size={"_360" as const}
                      />

                      <ServiceProcessCard
                        className={classNames(
                          "__wab_instance",
                          sty.serviceProcessCard__puBlq
                        )}
                        size={"_360" as const}
                      />

                      <ServiceProcessCard
                        className={classNames(
                          "__wab_instance",
                          sty.serviceProcessCard__eFjWv
                        )}
                        size={"_360" as const}
                      />

                      <ServiceProcessCard
                        className={classNames(
                          "__wab_instance",
                          sty.serviceProcessCard__oNQw6
                        )}
                        size={"_360" as const}
                      />

                      <ServiceProcessCard
                        className={classNames(
                          "__wab_instance",
                          sty.serviceProcessCard__yNlir
                        )}
                        size={"_360" as const}
                      />

                      <ServiceProcessCard
                        className={classNames(
                          "__wab_instance",
                          sty.serviceProcessCard___6Lp3R
                        )}
                        size={"_360" as const}
                      />

                      <ServiceProcessCard
                        className={classNames(
                          "__wab_instance",
                          sty.serviceProcessCard__hzYEp
                        )}
                        size={"_360" as const}
                      />

                      <ServiceProcessCard
                        className={classNames(
                          "__wab_instance",
                          sty.serviceProcessCard__jNhaZ
                        )}
                        size={"_360" as const}
                      />

                      <div
                        className={classNames(
                          defaultcss.all,
                          sty.freeBox__dORn1
                        )}
                      >
                        <TextLinkUnderlinePrimary
                          text={
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.freeBox__kjAcB
                              )}
                            >
                              {"Edit"}
                            </div>
                          }
                        />
                      </div>
                    </p.Stack>
                  </div>

                  <div
                    data-plasmic-name={"orderFeaturesCheckoutBlock"}
                    data-plasmic-override={overrides.orderFeaturesCheckoutBlock}
                    className={classNames(
                      defaultcss.all,
                      sty.orderFeaturesCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion__bekJb
                      )}
                      size={"_360" as const}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__vGOth
                        )}
                      >
                        {"Features"}
                      </div>
                    </Accordion>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.freeBox__hAWbE)}
                    >
                      <ServiceFeatureB
                        className={classNames(
                          "__wab_instance",
                          sty.serviceFeatureB__phTtf
                        )}
                        size={"small" as const}
                        slot={
                          <Icon111Icon
                            className={classNames(
                              defaultcss.all,
                              sty.svg___0LskH
                            )}
                            role={"img"}
                          />
                        }
                      />

                      <ServiceFeatureB
                        className={classNames(
                          "__wab_instance",
                          sty.serviceFeatureB__cOujE
                        )}
                        size={"small" as const}
                      />

                      <ServiceFeatureB
                        className={classNames(
                          "__wab_instance",
                          sty.serviceFeatureB__s3UXe
                        )}
                        size={"small" as const}
                      />

                      <ServiceFeatureB
                        className={classNames(
                          "__wab_instance",
                          sty.serviceFeatureB__gw64W
                        )}
                        size={"small" as const}
                      />

                      <ServiceFeatureB
                        className={classNames(
                          "__wab_instance",
                          sty.serviceFeatureB__kjJyC
                        )}
                        size={"small" as const}
                      />

                      <ServiceFeatureB
                        className={classNames(
                          "__wab_instance",
                          sty.serviceFeatureB__yUe8Y
                        )}
                        size={"small" as const}
                      />

                      <ServiceFeatureB
                        className={classNames(
                          "__wab_instance",
                          sty.serviceFeatureB__wdAwQ
                        )}
                        size={"small" as const}
                      />

                      <ServiceFeatureB
                        className={classNames(
                          "__wab_instance",
                          sty.serviceFeatureB___1XRIn
                        )}
                        size={"small" as const}
                      />

                      <div
                        className={classNames(
                          defaultcss.all,
                          sty.freeBox__nxTzD
                        )}
                      >
                        <TextLinkUnderlinePrimary
                          text={
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.freeBox__lwcO
                              )}
                            >
                              {"Edit"}
                            </div>
                          }
                        />
                      </div>
                    </p.Stack>
                  </div>

                  <div
                    data-plasmic-name={"orderContentCheckoutBlock"}
                    data-plasmic-override={overrides.orderContentCheckoutBlock}
                    className={classNames(
                      defaultcss.all,
                      sty.orderContentCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion__b5C5
                      )}
                      size={"_360" as const}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__kE1Ye
                        )}
                      >
                        {"Content"}
                      </div>
                    </Accordion>

                    <div
                      className={classNames(defaultcss.all, sty.freeBox__y77R4)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.freeBox__gF0Kq
                        )}
                      >
                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__hUk0G
                          )}
                          size={"small" as const}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__uk1O
                          )}
                          size={"small" as const}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__ugwJu
                          )}
                          size={"small" as const}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__ku6Y
                          )}
                          size={"small" as const}
                        />

                        <div
                          className={classNames(
                            defaultcss.all,
                            sty.freeBox__k1Cf2
                          )}
                        >
                          <TextLinkUnderlinePrimary
                            text={
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.freeBox__yhll3
                                )}
                              >
                                {"Edit"}
                              </div>
                            }
                          />
                        </div>
                      </p.Stack>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"orderMethodCheckoutBlock"}
                    data-plasmic-override={overrides.orderMethodCheckoutBlock}
                    className={classNames(
                      defaultcss.all,
                      sty.orderMethodCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion__xhfu
                      )}
                      size={"_360" as const}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__ptfsX
                        )}
                      >
                        {"Method"}
                      </div>
                    </Accordion>

                    <div
                      className={classNames(defaultcss.all, sty.freeBox__lOpja)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.freeBox__zjPzs
                        )}
                      >
                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard___83Ac2
                          )}
                          size={"small" as const}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard___5EsW6
                          )}
                          size={"small" as const}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__eTvo
                          )}
                          size={"small" as const}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__e7V9U
                          )}
                          size={"small" as const}
                        />

                        <div
                          className={classNames(
                            defaultcss.all,
                            sty.freeBox___95Wjh
                          )}
                        >
                          <TextLinkUnderlinePrimary
                            text={
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.freeBox__zt507
                                )}
                              >
                                {"Edit"}
                              </div>
                            }
                          />
                        </div>
                      </p.Stack>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"orderToolsCheckoutBlock"}
                    data-plasmic-override={overrides.orderToolsCheckoutBlock}
                    className={classNames(
                      defaultcss.all,
                      sty.orderToolsCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion__pqFpC
                      )}
                      size={"_360" as const}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox___1Rk8P
                        )}
                      >
                        {"Tools"}
                      </div>
                    </Accordion>

                    <div
                      className={classNames(defaultcss.all, sty.freeBox__yc6Vb)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.freeBox__bxGo
                        )}
                      >
                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay___3XmuT
                          )}
                          type={"ghost" as const}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.freeBox__rFdC5
                            )}
                          >
                            {"Badge"}
                          </div>
                        </ChipBadgeDisplay>

                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay___74YA4
                          )}
                          type={"ghost" as const}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.freeBox___46Iyk
                            )}
                          >
                            {"Design system"}
                          </div>
                        </ChipBadgeDisplay>

                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay__sNrH
                          )}
                          type={"ghost" as const}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.freeBox__n6Pfe
                            )}
                          >
                            {"Mobile app"}
                          </div>
                        </ChipBadgeDisplay>

                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay__uR7Mb
                          )}
                          type={"ghost" as const}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.freeBox__zmb7
                            )}
                          >
                            {"Web app"}
                          </div>
                        </ChipBadgeDisplay>

                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay__hdW18
                          )}
                          type={"ghost" as const}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.freeBox___8Lhwm
                            )}
                          >
                            {"E-commerce"}
                          </div>
                        </ChipBadgeDisplay>

                        <div
                          className={classNames(
                            defaultcss.all,
                            sty.freeBox__o2TAt
                          )}
                        >
                          <TextLinkUnderlinePrimary
                            text={
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.freeBox__wLMep
                                )}
                              >
                                {"Edit"}
                              </div>
                            }
                          />
                        </div>
                      </p.Stack>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"orderFormatCheckoutBlock"}
                    data-plasmic-override={overrides.orderFormatCheckoutBlock}
                    className={classNames(
                      defaultcss.all,
                      sty.orderFormatCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion__qaV5
                      )}
                      size={"_360" as const}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox___181N
                        )}
                      >
                        {"Format"}
                      </div>
                    </Accordion>

                    <div
                      className={classNames(defaultcss.all, sty.freeBox__loKas)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.freeBox__pY2Kh
                        )}
                      >
                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay___68SMs
                          )}
                          type={"ghost" as const}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.freeBox__jiZx
                            )}
                          >
                            {"Badge"}
                          </div>
                        </ChipBadgeDisplay>

                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay__r9UCp
                          )}
                          type={"ghost" as const}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.freeBox__dxpwb
                            )}
                          >
                            {"Design system"}
                          </div>
                        </ChipBadgeDisplay>

                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay___3Qgki
                          )}
                          type={"ghost" as const}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.freeBox__g6OvM
                            )}
                          >
                            {"Mobile app"}
                          </div>
                        </ChipBadgeDisplay>

                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay__bmtt
                          )}
                          type={"ghost" as const}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.freeBox__nfe7X
                            )}
                          >
                            {"Web app"}
                          </div>
                        </ChipBadgeDisplay>

                        <ChipBadgeDisplay
                          className={classNames(
                            "__wab_instance",
                            sty.chipBadgeDisplay__lI9Dr
                          )}
                          type={"ghost" as const}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.freeBox__tp8R
                            )}
                          >
                            {"E-commerce"}
                          </div>
                        </ChipBadgeDisplay>

                        <div
                          className={classNames(
                            defaultcss.all,
                            sty.freeBox__ySbT
                          )}
                        >
                          <TextLinkUnderlinePrimary
                            text={
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.freeBox__dDvkj
                                )}
                              >
                                {"Edit"}
                              </div>
                            }
                          />
                        </div>
                      </p.Stack>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"orderRequirementCheckoutBlock"}
                    data-plasmic-override={
                      overrides.orderRequirementCheckoutBlock
                    }
                    className={classNames(
                      defaultcss.all,
                      sty.orderRequirementCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion___8VI5
                      )}
                      size={"_360" as const}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__vOrzm
                        )}
                      >
                        {"Requirements"}
                      </div>
                    </Accordion>

                    <div
                      className={classNames(
                        defaultcss.all,
                        sty.freeBox___8Ck3Z
                      )}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox___7EDza
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commo"
                        }
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.freeBox__z9Bzn
                        )}
                      >
                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard___6ZHyo
                          )}
                          size={"small" as const}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__pzYIi
                          )}
                          size={"small" as const}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__rosC0
                          )}
                          size={"small" as const}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard___9GXm6
                          )}
                          size={"small" as const}
                        />

                        <div
                          className={classNames(
                            defaultcss.all,
                            sty.freeBox___7PjZz
                          )}
                        >
                          <TextLinkUnderlinePrimary
                            text={
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.freeBox__jWNlk
                                )}
                              >
                                {"Edit"}
                              </div>
                            }
                          />
                        </div>
                      </p.Stack>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"orderTermsCheckoutBlock"}
                    data-plasmic-override={overrides.orderTermsCheckoutBlock}
                    className={classNames(
                      defaultcss.all,
                      sty.orderTermsCheckoutBlock
                    )}
                  >
                    <Accordion
                      className={classNames(
                        "__wab_instance",
                        sty.accordion__k0Hmn
                      )}
                      size={"_360" as const}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox___8XaM
                        )}
                      >
                        {"Terms"}
                      </div>
                    </Accordion>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.freeBox__yfjp4)}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__zztPw
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commo"
                        }
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          defaultcss.all,
                          sty.freeBox__wLxRz
                        )}
                      >
                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__bsvdR
                          )}
                          size={"small" as const}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard___7VeXq
                          )}
                          size={"small" as const}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__vWofw
                          )}
                          size={"small" as const}
                        />

                        <ServiceFeatureCard
                          className={classNames(
                            "__wab_instance",
                            sty.serviceFeatureCard__mvPvc
                          )}
                          size={"small" as const}
                        />

                        <div
                          className={classNames(
                            defaultcss.all,
                            sty.freeBox__mpWe1
                          )}
                        >
                          <TextLinkUnderlinePrimary
                            text={
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.freeBox___7FY00
                                )}
                              >
                                {"Edit"}
                              </div>
                            }
                          />
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>

            <CheckoutServiceListing
              data-plasmic-name={"checkoutServiceListing"}
              data-plasmic-override={overrides.checkoutServiceListing}
              className={classNames(
                "__wab_instance",
                sty.checkoutServiceListing
              )}
            />
          </p.Stack>

          <FooterServiceListing
            data-plasmic-name={"footerServiceListing"}
            data-plasmic-override={overrides.footerServiceListing}
            className={classNames("__wab_instance", sty.footerServiceListing)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "serviceListingNavbar",
    "navbarServiceListing",
    "progressBar",
    "orderParent",
    "orderHeadlineTitleImage",
    "orderImageHeroBlock",
    "img",
    "orderInputBlock",
    "orderListingInput",
    "orderPlacementInput",
    "orderSubscriptionInput",
    "summaryCheckoutBlock",
    "orderCheckoutSummaryReviewBody",
    "orderDescriptionCheckoutBlock",
    "serviceDescriptionOverview",
    "orderProcessCheckoutBlock",
    "serviceProcessDescription",
    "orderFeaturesCheckoutBlock",
    "orderContentCheckoutBlock",
    "orderMethodCheckoutBlock",
    "orderToolsCheckoutBlock",
    "orderFormatCheckoutBlock",
    "orderRequirementCheckoutBlock",
    "orderTermsCheckoutBlock",
    "checkoutServiceListing",
    "footerServiceListing"
  ],
  serviceListingNavbar: [
    "serviceListingNavbar",
    "navbarServiceListing",
    "progressBar"
  ],
  navbarServiceListing: ["navbarServiceListing"],
  progressBar: ["progressBar"],
  orderParent: [
    "orderParent",
    "orderHeadlineTitleImage",
    "orderImageHeroBlock",
    "img",
    "orderInputBlock",
    "orderListingInput",
    "orderPlacementInput",
    "orderSubscriptionInput",
    "summaryCheckoutBlock",
    "orderCheckoutSummaryReviewBody",
    "orderDescriptionCheckoutBlock",
    "serviceDescriptionOverview",
    "orderProcessCheckoutBlock",
    "serviceProcessDescription",
    "orderFeaturesCheckoutBlock",
    "orderContentCheckoutBlock",
    "orderMethodCheckoutBlock",
    "orderToolsCheckoutBlock",
    "orderFormatCheckoutBlock",
    "orderRequirementCheckoutBlock",
    "orderTermsCheckoutBlock"
  ],
  orderHeadlineTitleImage: [
    "orderHeadlineTitleImage",
    "orderImageHeroBlock",
    "img"
  ],
  orderImageHeroBlock: ["orderImageHeroBlock", "img"],
  img: ["img"],
  orderInputBlock: [
    "orderInputBlock",
    "orderListingInput",
    "orderPlacementInput",
    "orderSubscriptionInput"
  ],
  orderListingInput: ["orderListingInput"],
  orderPlacementInput: ["orderPlacementInput"],
  orderSubscriptionInput: ["orderSubscriptionInput"],
  summaryCheckoutBlock: [
    "summaryCheckoutBlock",
    "orderCheckoutSummaryReviewBody",
    "orderDescriptionCheckoutBlock",
    "serviceDescriptionOverview",
    "orderProcessCheckoutBlock",
    "serviceProcessDescription",
    "orderFeaturesCheckoutBlock",
    "orderContentCheckoutBlock",
    "orderMethodCheckoutBlock",
    "orderToolsCheckoutBlock",
    "orderFormatCheckoutBlock",
    "orderRequirementCheckoutBlock",
    "orderTermsCheckoutBlock"
  ],
  orderCheckoutSummaryReviewBody: [
    "orderCheckoutSummaryReviewBody",
    "orderDescriptionCheckoutBlock",
    "serviceDescriptionOverview",
    "orderProcessCheckoutBlock",
    "serviceProcessDescription",
    "orderFeaturesCheckoutBlock",
    "orderContentCheckoutBlock",
    "orderMethodCheckoutBlock",
    "orderToolsCheckoutBlock",
    "orderFormatCheckoutBlock",
    "orderRequirementCheckoutBlock",
    "orderTermsCheckoutBlock"
  ],
  orderDescriptionCheckoutBlock: [
    "orderDescriptionCheckoutBlock",
    "serviceDescriptionOverview"
  ],
  serviceDescriptionOverview: ["serviceDescriptionOverview"],
  orderProcessCheckoutBlock: [
    "orderProcessCheckoutBlock",
    "serviceProcessDescription"
  ],
  serviceProcessDescription: ["serviceProcessDescription"],
  orderFeaturesCheckoutBlock: ["orderFeaturesCheckoutBlock"],
  orderContentCheckoutBlock: ["orderContentCheckoutBlock"],
  orderMethodCheckoutBlock: ["orderMethodCheckoutBlock"],
  orderToolsCheckoutBlock: ["orderToolsCheckoutBlock"],
  orderFormatCheckoutBlock: ["orderFormatCheckoutBlock"],
  orderRequirementCheckoutBlock: ["orderRequirementCheckoutBlock"],
  orderTermsCheckoutBlock: ["orderTermsCheckoutBlock"],
  checkoutServiceListing: ["checkoutServiceListing"],
  footerServiceListing: ["footerServiceListing"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  serviceListingNavbar: "div";
  navbarServiceListing: typeof NavbarServiceListing;
  progressBar: typeof ProgressBar;
  orderParent: "div";
  orderHeadlineTitleImage: "div";
  orderImageHeroBlock: "div";
  img: "img";
  orderInputBlock: "div";
  orderListingInput: typeof InputCheckoutItem;
  orderPlacementInput: typeof ToggleCheckoutItem;
  orderSubscriptionInput: typeof ToggleCheckoutItem;
  summaryCheckoutBlock: "div";
  orderCheckoutSummaryReviewBody: "div";
  orderDescriptionCheckoutBlock: "div";
  serviceDescriptionOverview: "div";
  orderProcessCheckoutBlock: "div";
  serviceProcessDescription: "div";
  orderFeaturesCheckoutBlock: "div";
  orderContentCheckoutBlock: "div";
  orderMethodCheckoutBlock: "div";
  orderToolsCheckoutBlock: "div";
  orderFormatCheckoutBlock: "div";
  orderRequirementCheckoutBlock: "div";
  orderTermsCheckoutBlock: "div";
  checkoutServiceListing: typeof CheckoutServiceListing;
  footerServiceListing: typeof FooterServiceListing;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicServicelistingorder__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicServicelistingorder__VariantsArgs;
    args?: PlasmicServicelistingorder__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicServicelistingorder__Fetches;
  } & Omit<PlasmicServicelistingorder__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicServicelistingorder__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicServicelistingorder__ArgProps,
      internalVariantPropNames: PlasmicServicelistingorder__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicServicelistingorder__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicServicelistingorder";
  } else {
    func.displayName = `PlasmicServicelistingorder.${nodeName}`;
  }
  return func;
}

export const PlasmicServicelistingorder = Object.assign(
  // Top-level PlasmicServicelistingorder renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    serviceListingNavbar: makeNodeComponent("serviceListingNavbar"),
    navbarServiceListing: makeNodeComponent("navbarServiceListing"),
    progressBar: makeNodeComponent("progressBar"),
    orderParent: makeNodeComponent("orderParent"),
    orderHeadlineTitleImage: makeNodeComponent("orderHeadlineTitleImage"),
    orderImageHeroBlock: makeNodeComponent("orderImageHeroBlock"),
    img: makeNodeComponent("img"),
    orderInputBlock: makeNodeComponent("orderInputBlock"),
    orderListingInput: makeNodeComponent("orderListingInput"),
    orderPlacementInput: makeNodeComponent("orderPlacementInput"),
    orderSubscriptionInput: makeNodeComponent("orderSubscriptionInput"),
    summaryCheckoutBlock: makeNodeComponent("summaryCheckoutBlock"),
    orderCheckoutSummaryReviewBody: makeNodeComponent(
      "orderCheckoutSummaryReviewBody"
    ),
    orderDescriptionCheckoutBlock: makeNodeComponent(
      "orderDescriptionCheckoutBlock"
    ),
    serviceDescriptionOverview: makeNodeComponent("serviceDescriptionOverview"),
    orderProcessCheckoutBlock: makeNodeComponent("orderProcessCheckoutBlock"),
    serviceProcessDescription: makeNodeComponent("serviceProcessDescription"),
    orderFeaturesCheckoutBlock: makeNodeComponent("orderFeaturesCheckoutBlock"),
    orderContentCheckoutBlock: makeNodeComponent("orderContentCheckoutBlock"),
    orderMethodCheckoutBlock: makeNodeComponent("orderMethodCheckoutBlock"),
    orderToolsCheckoutBlock: makeNodeComponent("orderToolsCheckoutBlock"),
    orderFormatCheckoutBlock: makeNodeComponent("orderFormatCheckoutBlock"),
    orderRequirementCheckoutBlock: makeNodeComponent(
      "orderRequirementCheckoutBlock"
    ),
    orderTermsCheckoutBlock: makeNodeComponent("orderTermsCheckoutBlock"),
    checkoutServiceListing: makeNodeComponent("checkoutServiceListing"),
    footerServiceListing: makeNodeComponent("footerServiceListing"),

    // Metadata about props expected for PlasmicServicelistingorder
    internalVariantProps: PlasmicServicelistingorder__VariantProps,
    internalArgProps: PlasmicServicelistingorder__ArgProps
  }
);

export default PlasmicServicelistingorder;
/* prettier-ignore-end */
