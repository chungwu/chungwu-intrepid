// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4BLiU6oPcZdXDvseuPTeUa
// Component: H7yjHudNjXR9xp
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavbarInternal from "../../NavbarInternal"; // plasmic-import: nBfIHHqHvjUywN9/component
import CardHeaderTitleDisplay from "../../CardHeaderTitleDisplay"; // plasmic-import: fk5BRaqICb6MOmt/component
import CardLinkServiceMenu from "../../CardLinkServiceMenu"; // plasmic-import: 3ED63OwXGjK4Vt/component
import FooterB from "../../FooterB"; // plasmic-import: IZENTiSL4_zyK8/component

import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: biX3aS42hiG0fF/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_copy_of_market_v_2.module.css"; // plasmic-import: 4BLiU6oPcZdXDvseuPTeUa/projectcss
import * as sty from "./PlasmicListingTestNotInUse.module.css"; // plasmic-import: H7yjHudNjXR9xp/css

import ServiceBriefIcon from "./icons/PlasmicIcon__ServiceBrief"; // plasmic-import: LHUWa9UTpneLCOR/icon
import CartProductsvgIcon from "./icons/PlasmicIcon__CartProductsvg"; // plasmic-import: bXJcb27eLQP3bNn/icon
import CouponIcon from "./icons/PlasmicIcon__Coupon"; // plasmic-import: iFFAr2Gx0zeQKQe/icon
import RefferalIcon from "./icons/PlasmicIcon__Refferal"; // plasmic-import: NeZoEYahI9yvt_d/icon

export type PlasmicListingTestNotInUse__VariantMembers = {};

export type PlasmicListingTestNotInUse__VariantsArgs = {};
type VariantPropType = keyof PlasmicListingTestNotInUse__VariantsArgs;
export const PlasmicListingTestNotInUse__VariantProps =
  new Array<VariantPropType>();

export type PlasmicListingTestNotInUse__ArgsType = {};
type ArgPropType = keyof PlasmicListingTestNotInUse__ArgsType;
export const PlasmicListingTestNotInUse__ArgProps = new Array<ArgPropType>();

export type PlasmicListingTestNotInUse__OverridesType = {
  root?: p.Flex<"div">;
  navbarInternal?: p.Flex<typeof NavbarInternal>;
  section?: p.Flex<"section">;
  footerB?: p.Flex<typeof FooterB>;
};

export interface DefaultListingTestNotInUseProps {
  dataFetches: PlasmicListingTestNotInUse__Fetches;
}

function PlasmicListingTestNotInUse__RenderFunc(props: {
  variants: PlasmicListingTestNotInUse__VariantsArgs;
  args: PlasmicListingTestNotInUse__ArgsType;
  overrides: PlasmicListingTestNotInUse__OverridesType;
  dataFetches?: PlasmicListingTestNotInUse__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <Head>
        <title key="title">{""}</title>
        <meta key="og:title" property="og:title" content={""} />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={""}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <NavbarInternal
            data-plasmic-name={"navbarInternal"}
            data-plasmic-override={overrides.navbarInternal}
            className={classNames("__wab_instance", sty.navbarInternal)}
          />

          <p.Stack
            as={"section"}
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            hasGap={true}
            className={classNames(defaultcss.all, sty.section)}
          >
            <CardHeaderTitleDisplay
              className={classNames(
                "__wab_instance",
                sty.cardHeaderTitleDisplay__mIxvL
              )}
              headings={[]}
              size={"_540" as const}
              slot={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__j67Wy
                  )}
                >
                  {"Create, list, and sell services & products"}
                </div>
              }
              textDisplay={"List & Sell"}
              textSubhead={
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__o2XHd
                  )}
                >
                  {
                    "Make some selections, fill in some boxes, and go live in minutes."
                  }
                </div>
              }
            />

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__oj3JA)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox___6LTzu)}
              >
                <CardHeaderTitleDisplay
                  className={classNames(
                    "__wab_instance",
                    sty.cardHeaderTitleDisplay__rarp7
                  )}
                  headings={["title"]}
                  size={"_360" as const}
                  slot={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__rpvNq
                      )}
                    >
                      {"Collaboration"}
                    </div>
                  }
                  textSubhead={
                    "Cross sell and promote a collaboration with a Partner or team "
                  }
                />

                <div className={classNames(defaultcss.all, sty.freeBox__sbxNf)}>
                  <CardLinkServiceMenu
                    className={classNames(
                      "__wab_instance",
                      sty.cardLinkServiceMenu__yRenn
                    )}
                    icon={
                      <ServiceBriefIcon
                        className={classNames(defaultcss.all, sty.svg__t4A0T)}
                        role={"img"}
                      />
                    }
                    textBody={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__ltMG
                        )}
                      >
                        {
                          "Description of service or product that makes it clear to the"
                        }
                      </div>
                    }
                    textHeadline={"Service"}
                  />

                  <CardLinkServiceMenu
                    className={classNames(
                      "__wab_instance",
                      sty.cardLinkServiceMenu__fcIH
                    )}
                    icon={
                      <CartProductsvgIcon
                        className={classNames(defaultcss.all, sty.svg__dzlmr)}
                        role={"img"}
                      />
                    }
                    textBody={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox___32Zho
                        )}
                      >
                        {
                          "Description of service or product that makes it clear to the"
                        }
                      </div>
                    }
                    textHeadline={"Product"}
                  />
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__tyW5)}
              >
                <CardHeaderTitleDisplay
                  className={classNames(
                    "__wab_instance",
                    sty.cardHeaderTitleDisplay__bxRd
                  )}
                  headings={["title"]}
                  size={"_360" as const}
                  slot={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__cscJe
                      )}
                    >
                      {"Bundle"}
                    </div>
                  }
                  textSubhead={
                    "Group several services or digital products  together."
                  }
                />

                <div className={classNames(defaultcss.all, sty.freeBox__eUtrK)}>
                  <CardLinkServiceMenu
                    className={classNames(
                      "__wab_instance",
                      sty.cardLinkServiceMenu__kLuHu
                    )}
                    icon={
                      <ServiceBriefIcon
                        className={classNames(defaultcss.all, sty.svg__vUr7G)}
                        role={"img"}
                      />
                    }
                    textBody={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__mqo3
                        )}
                      >
                        {
                          "Description of service or product that makes it clear to the"
                        }
                      </div>
                    }
                    textHeadline={"Service"}
                  />

                  <CardLinkServiceMenu
                    className={classNames(
                      "__wab_instance",
                      sty.cardLinkServiceMenu__b8Tl8
                    )}
                    icon={
                      <CartProductsvgIcon
                        className={classNames(defaultcss.all, sty.svg__nVtOn)}
                        role={"img"}
                      />
                    }
                    textBody={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__jz67Z
                        )}
                      >
                        {
                          "Description of service or product that makes it clear to the"
                        }
                      </div>
                    }
                    textHeadline={"Digital Product"}
                  />
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__t400P)}
              >
                <CardHeaderTitleDisplay
                  className={classNames(
                    "__wab_instance",
                    sty.cardHeaderTitleDisplay__ukivY
                  )}
                  headings={["title"]}
                  size={"_360" as const}
                  slot={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox___6Ps5J
                      )}
                    >
                      {"Subscription"}
                    </div>
                  }
                  textSubhead={
                    "Create a service subscription or product. Keep em' coming back for more."
                  }
                />

                <div className={classNames(defaultcss.all, sty.freeBox__e2GrP)}>
                  <CardLinkServiceMenu
                    className={classNames(
                      "__wab_instance",
                      sty.cardLinkServiceMenu__hwSe5
                    )}
                    icon={
                      <ServiceBriefIcon
                        className={classNames(defaultcss.all, sty.svg__tJhzk)}
                        role={"img"}
                      />
                    }
                    textBody={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__m29UC
                        )}
                      >
                        {
                          "Description of service or product that makes it clear to the"
                        }
                      </div>
                    }
                    textHeadline={"Service"}
                  />

                  <CardLinkServiceMenu
                    className={classNames(
                      "__wab_instance",
                      sty.cardLinkServiceMenu___0Scot
                    )}
                    icon={
                      <CartProductsvgIcon
                        className={classNames(defaultcss.all, sty.svg___75L27)}
                        role={"img"}
                      />
                    }
                    textBody={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__v0Dvz
                        )}
                      >
                        {
                          "Description of service or product that makes it clear to the"
                        }
                      </div>
                    }
                    textHeadline={"Product"}
                  />
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__mDjyx)}
              >
                <CardHeaderTitleDisplay
                  className={classNames(
                    "__wab_instance",
                    sty.cardHeaderTitleDisplay__ytZ08
                  )}
                  headings={["title"]}
                  size={"_360" as const}
                  slot={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__tdy0Y
                      )}
                    >
                      {"Promotion"}
                    </div>
                  }
                  textSubhead={
                    "Generates a unique code for studio credit when purchased"
                  }
                />

                <div className={classNames(defaultcss.all, sty.freeBox__z8Uic)}>
                  <CardLinkServiceMenu
                    className={classNames(
                      "__wab_instance",
                      sty.cardLinkServiceMenu__gbm6W
                    )}
                    icon={
                      <CouponIcon
                        className={classNames(defaultcss.all, sty.svg__oBzDs)}
                        role={"img"}
                      />
                    }
                    textBody={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__vRsNh
                        )}
                      >
                        {
                          "Description of service or product that makes it clear to the"
                        }
                      </div>
                    }
                    textHeadline={"Coupon"}
                  />

                  <CardLinkServiceMenu
                    className={classNames(
                      "__wab_instance",
                      sty.cardLinkServiceMenu__cNzh8
                    )}
                    icon={
                      <RefferalIcon
                        className={classNames(defaultcss.all, sty.svg__htuFa)}
                        role={"img"}
                      />
                    }
                    textBody={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__jrWGl
                        )}
                      >
                        {
                          "Description of service or product that makes it clear to the"
                        }
                      </div>
                    }
                    textHeadline={"Refferal"}
                  />
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__j4XyL)}
              >
                <CardHeaderTitleDisplay
                  className={classNames(
                    "__wab_instance",
                    sty.cardHeaderTitleDisplay__jpjFg
                  )}
                  headings={["title"]}
                  size={"_360" as const}
                  slot={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__oiP4P
                      )}
                    >
                      {"Standard"}
                    </div>
                  }
                  textSubhead={
                    "Like Coke classic. simple and fresh. Start selling!"
                  }
                />

                <div className={classNames(defaultcss.all, sty.freeBox__nV76N)}>
                  <CardLinkServiceMenu
                    className={classNames(
                      "__wab_instance",
                      sty.cardLinkServiceMenu__lIAqh
                    )}
                    icon={
                      <ServiceBriefIcon
                        className={classNames(defaultcss.all, sty.svg__daQu)}
                        role={"img"}
                      />
                    }
                    textBody={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__p67W
                        )}
                      >
                        {
                          "Description of service or product that makes it clear to the"
                        }
                      </div>
                    }
                    textHeadline={"Service"}
                  />

                  <CardLinkServiceMenu
                    className={classNames(
                      "__wab_instance",
                      sty.cardLinkServiceMenu___3XtcF
                    )}
                    icon={
                      <CartProductsvgIcon
                        className={classNames(defaultcss.all, sty.svg__k5Wn)}
                        role={"img"}
                      />
                    }
                    textBody={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox___4S8Al
                        )}
                      >
                        {
                          "Description of service or product that makes it clear to the"
                        }
                      </div>
                    }
                    textHeadline={"Product"}
                  />
                </div>
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <FooterB
            data-plasmic-name={"footerB"}
            data-plasmic-override={overrides.footerB}
            className={classNames("__wab_instance", sty.footerB)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "navbarInternal", "section", "footerB"],
  navbarInternal: ["navbarInternal"],
  section: ["section"],
  footerB: ["footerB"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbarInternal: typeof NavbarInternal;
  section: "section";
  footerB: typeof FooterB;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicListingTestNotInUse__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicListingTestNotInUse__VariantsArgs;
    args?: PlasmicListingTestNotInUse__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicListingTestNotInUse__Fetches;
  } & Omit<PlasmicListingTestNotInUse__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicListingTestNotInUse__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicListingTestNotInUse__ArgProps,
      internalVariantPropNames: PlasmicListingTestNotInUse__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicListingTestNotInUse__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicListingTestNotInUse";
  } else {
    func.displayName = `PlasmicListingTestNotInUse.${nodeName}`;
  }
  return func;
}

export const PlasmicListingTestNotInUse = Object.assign(
  // Top-level PlasmicListingTestNotInUse renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbarInternal: makeNodeComponent("navbarInternal"),
    section: makeNodeComponent("section"),
    footerB: makeNodeComponent("footerB"),

    // Metadata about props expected for PlasmicListingTestNotInUse
    internalVariantProps: PlasmicListingTestNotInUse__VariantProps,
    internalArgProps: PlasmicListingTestNotInUse__ArgProps
  }
);

export default PlasmicListingTestNotInUse;
/* prettier-ignore-end */
