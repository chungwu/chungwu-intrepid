// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4BLiU6oPcZdXDvseuPTeUa
// Component: dGXJHGwICf5B1Az
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import IconPrimary from "../../IconPrimary"; // plasmic-import: leoxU5GkcMHMK8X/component

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_copy_of_market_v_2.module.css"; // plasmic-import: 4BLiU6oPcZdXDvseuPTeUa/projectcss
import * as sty from "./PlasmicDisplayIconText.module.css"; // plasmic-import: dGXJHGwICf5B1Az/css

import Icon171Icon from "./icons/PlasmicIcon__Icon171"; // plasmic-import: L1T0WWEIfF6hPBd/icon

export type PlasmicDisplayIconText__VariantMembers = {
  size: "_14" | "_16" | "_18" | "_24" | "_32" | "_40" | "_48" | "_64" | "_80";
};

export type PlasmicDisplayIconText__VariantsArgs = {
  size?: SingleChoiceArg<
    "_14" | "_16" | "_18" | "_24" | "_32" | "_40" | "_48" | "_64" | "_80"
  >;
};

type VariantPropType = keyof PlasmicDisplayIconText__VariantsArgs;
export const PlasmicDisplayIconText__VariantProps = new Array<VariantPropType>(
  "size"
);

export type PlasmicDisplayIconText__ArgsType = {
  elementIcon?: React.ReactNode;
  text?: React.ReactNode;
  text14Px?: React.ReactNode;
  text16Px?: React.ReactNode;
  text18Px?: React.ReactNode;
  text24Px?: React.ReactNode;
  text32Px?: React.ReactNode;
  text40Px?: React.ReactNode;
  text48Px?: React.ReactNode;
  text64Px?: React.ReactNode;
  text2?: React.ReactNode;
  elementIcon14Px?: React.ReactNode;
  elementIcon2?: React.ReactNode;
  elementIcon18Px?: React.ReactNode;
  elementIcon24Px?: React.ReactNode;
  elementIcon32Px?: React.ReactNode;
  elementIcon40Px?: React.ReactNode;
  elementIcon48Px?: React.ReactNode;
  elementIcon64Px?: React.ReactNode;
  elementIcon80Px?: React.ReactNode;
};

type ArgPropType = keyof PlasmicDisplayIconText__ArgsType;
export const PlasmicDisplayIconText__ArgProps = new Array<ArgPropType>(
  "elementIcon",
  "text",
  "text14Px",
  "text16Px",
  "text18Px",
  "text24Px",
  "text32Px",
  "text40Px",
  "text48Px",
  "text64Px",
  "text2",
  "elementIcon14Px",
  "elementIcon2",
  "elementIcon18Px",
  "elementIcon24Px",
  "elementIcon32Px",
  "elementIcon40Px",
  "elementIcon48Px",
  "elementIcon64Px",
  "elementIcon80Px"
);

export type PlasmicDisplayIconText__OverridesType = {
  root?: p.Flex<"div">;
  parent?: p.Flex<"div">;
  elementIconParent?: p.Flex<"div">;
  textParent?: p.Flex<"div">;
};

export interface DefaultDisplayIconTextProps {
  elementIcon?: React.ReactNode;
  text?: React.ReactNode;
  text14Px?: React.ReactNode;
  text16Px?: React.ReactNode;
  text18Px?: React.ReactNode;
  text24Px?: React.ReactNode;
  text32Px?: React.ReactNode;
  text40Px?: React.ReactNode;
  text48Px?: React.ReactNode;
  text64Px?: React.ReactNode;
  text2?: React.ReactNode;
  elementIcon14Px?: React.ReactNode;
  elementIcon2?: React.ReactNode;
  elementIcon18Px?: React.ReactNode;
  elementIcon24Px?: React.ReactNode;
  elementIcon32Px?: React.ReactNode;
  elementIcon40Px?: React.ReactNode;
  elementIcon48Px?: React.ReactNode;
  elementIcon64Px?: React.ReactNode;
  elementIcon80Px?: React.ReactNode;
  size?: SingleChoiceArg<
    "_14" | "_16" | "_18" | "_24" | "_32" | "_40" | "_48" | "_64" | "_80"
  >;
  className?: string;
}

function PlasmicDisplayIconText__RenderFunc(props: {
  variants: PlasmicDisplayIconText__VariantsArgs;
  args: PlasmicDisplayIconText__ArgsType;
  overrides: PlasmicDisplayIconText__OverridesType;
  dataFetches?: PlasmicDisplayIconText__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <p.Stack
        as={"div"}
        data-plasmic-name={"parent"}
        data-plasmic-override={overrides.parent}
        hasGap={true}
        className={classNames(defaultcss.all, sty.parent, {
          [sty.parent__size__14]: hasVariant(variants, "size", "_14"),
          [sty.parent__size__16]: hasVariant(variants, "size", "_16")
        })}
      >
        <div
          data-plasmic-name={"elementIconParent"}
          data-plasmic-override={overrides.elementIconParent}
          className={classNames(defaultcss.all, sty.elementIconParent, {
            [sty.elementIconParent__size__14]: hasVariant(
              variants,
              "size",
              "_14"
            ),
            [sty.elementIconParent__size__16]: hasVariant(
              variants,
              "size",
              "_16"
            ),
            [sty.elementIconParent__size__18]: hasVariant(
              variants,
              "size",
              "_18"
            ),
            [sty.elementIconParent__size__24]: hasVariant(
              variants,
              "size",
              "_24"
            ),
            [sty.elementIconParent__size__32]: hasVariant(
              variants,
              "size",
              "_32"
            ),
            [sty.elementIconParent__size__40]: hasVariant(
              variants,
              "size",
              "_40"
            ),
            [sty.elementIconParent__size__48]: hasVariant(
              variants,
              "size",
              "_48"
            ),
            [sty.elementIconParent__size__64]: hasVariant(
              variants,
              "size",
              "_64"
            ),
            [sty.elementIconParent__size__80]: hasVariant(
              variants,
              "size",
              "_80"
            )
          })}
        >
          {(
            hasVariant(variants, "size", "_80")
              ? false
              : hasVariant(variants, "size", "_64")
              ? false
              : hasVariant(variants, "size", "_48")
              ? false
              : hasVariant(variants, "size", "_40")
              ? false
              : hasVariant(variants, "size", "_32")
              ? false
              : hasVariant(variants, "size", "_24")
              ? false
              : hasVariant(variants, "size", "_18")
              ? false
              : hasVariant(variants, "size", "_16")
              ? false
              : hasVariant(variants, "size", "_14")
              ? false
              : true
          )
            ? p.renderPlasmicSlot({
                defaultContents: (
                  <IconPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.iconPrimary__papM
                    )}
                    svgIcon={
                      <Icon171Icon
                        className={classNames(defaultcss.all, sty.svg__fGL0)}
                        role={"img"}
                      />
                    }
                  />
                ),

                value: args.elementIcon
              })
            : null}
          {(hasVariant(variants, "size", "_14") ? true : false)
            ? p.renderPlasmicSlot({
                defaultContents: (
                  <IconPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.iconPrimary__hv5Tj
                    )}
                    size={"_14Px" as const}
                    svgIcon={
                      <Icon171Icon
                        className={classNames(defaultcss.all, sty.svg___4RDqN)}
                        role={"img"}
                      />
                    }
                  />
                ),

                value: args.elementIcon14Px
              })
            : null}
          {(hasVariant(variants, "size", "_16") ? true : false)
            ? p.renderPlasmicSlot({
                defaultContents: (
                  <IconPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.iconPrimary__skBr
                    )}
                    size={"_16Px" as const}
                    svgIcon={
                      <Icon171Icon
                        className={classNames(defaultcss.all, sty.svg__ebNUq)}
                        role={"img"}
                      />
                    }
                  />
                ),

                value: args.elementIcon2
              })
            : null}
          {(hasVariant(variants, "size", "_18") ? true : false)
            ? p.renderPlasmicSlot({
                defaultContents: (
                  <IconPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.iconPrimary__aY8W2
                    )}
                    size={"_18Px" as const}
                    svgIcon={
                      <Icon171Icon
                        className={classNames(defaultcss.all, sty.svg__xz92)}
                        role={"img"}
                      />
                    }
                  />
                ),

                value: args.elementIcon18Px
              })
            : null}
          {(hasVariant(variants, "size", "_24") ? true : false)
            ? p.renderPlasmicSlot({
                defaultContents: (
                  <IconPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.iconPrimary___8Hdip
                    )}
                    size={"_24Px" as const}
                    svgIcon={
                      <Icon171Icon
                        className={classNames(defaultcss.all, sty.svg___7Dnff)}
                        role={"img"}
                      />
                    }
                  />
                ),

                value: args.elementIcon24Px
              })
            : null}
          {(hasVariant(variants, "size", "_32") ? true : false)
            ? p.renderPlasmicSlot({
                defaultContents: (
                  <IconPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.iconPrimary__xCLes
                    )}
                    size={"_32Px" as const}
                    svgIcon={
                      <Icon171Icon
                        className={classNames(defaultcss.all, sty.svg__tE1Id)}
                        role={"img"}
                      />
                    }
                  />
                ),

                value: args.elementIcon32Px
              })
            : null}
          {(hasVariant(variants, "size", "_40") ? true : false)
            ? p.renderPlasmicSlot({
                defaultContents: (
                  <IconPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.iconPrimary__wCjGf
                    )}
                    size={"_40Px" as const}
                    svgIcon={
                      <Icon171Icon
                        className={classNames(defaultcss.all, sty.svg__apLyr)}
                        role={"img"}
                      />
                    }
                  />
                ),

                value: args.elementIcon40Px
              })
            : null}
          {(hasVariant(variants, "size", "_48") ? true : false)
            ? p.renderPlasmicSlot({
                defaultContents: (
                  <IconPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.iconPrimary___37VzE
                    )}
                    size={"_48Px" as const}
                    svgIcon={
                      <Icon171Icon
                        className={classNames(defaultcss.all, sty.svg__zqrtT)}
                        role={"img"}
                      />
                    }
                  />
                ),

                value: args.elementIcon48Px
              })
            : null}
          {(hasVariant(variants, "size", "_64") ? true : false)
            ? p.renderPlasmicSlot({
                defaultContents: (
                  <IconPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.iconPrimary__cOjk0
                    )}
                    size={"_64Px" as const}
                    svgIcon={
                      <Icon171Icon
                        className={classNames(defaultcss.all, sty.svg__gc0Ax)}
                        role={"img"}
                      />
                    }
                  />
                ),

                value: args.elementIcon64Px
              })
            : null}
          {(hasVariant(variants, "size", "_80") ? true : false)
            ? p.renderPlasmicSlot({
                defaultContents: (
                  <IconPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.iconPrimary__nOoW9
                    )}
                    size={"_80Px" as const}
                    svgIcon={
                      <Icon171Icon
                        className={classNames(defaultcss.all, sty.svg__cboOi)}
                        role={"img"}
                      />
                    }
                  />
                ),

                value: args.elementIcon80Px
              })
            : null}
        </div>

        <div
          data-plasmic-name={"textParent"}
          data-plasmic-override={overrides.textParent}
          className={classNames(defaultcss.all, sty.textParent, {
            [sty.textParent__size__14]: hasVariant(variants, "size", "_14"),
            [sty.textParent__size__16]: hasVariant(variants, "size", "_16"),
            [sty.textParent__size__18]: hasVariant(variants, "size", "_18"),
            [sty.textParent__size__24]: hasVariant(variants, "size", "_24"),
            [sty.textParent__size__32]: hasVariant(variants, "size", "_32"),
            [sty.textParent__size__40]: hasVariant(variants, "size", "_40"),
            [sty.textParent__size__48]: hasVariant(variants, "size", "_48"),
            [sty.textParent__size__64]: hasVariant(variants, "size", "_64"),
            [sty.textParent__size__80]: hasVariant(variants, "size", "_80")
          })}
        >
          {(
            hasVariant(variants, "size", "_80")
              ? false
              : hasVariant(variants, "size", "_64")
              ? false
              : hasVariant(variants, "size", "_48")
              ? false
              : hasVariant(variants, "size", "_40")
              ? false
              : hasVariant(variants, "size", "_32")
              ? false
              : hasVariant(variants, "size", "_24")
              ? false
              : hasVariant(variants, "size", "_18")
              ? false
              : hasVariant(variants, "size", "_16")
              ? false
              : hasVariant(variants, "size", "_14")
              ? false
              : true
          )
            ? p.renderPlasmicSlot({
                defaultContents: "list item",
                value: args.text,
                className: classNames(sty.slotText, {
                  [sty.slotText__size__14]: hasVariant(variants, "size", "_14"),
                  [sty.slotText__size__16]: hasVariant(variants, "size", "_16"),
                  [sty.slotText__size__18]: hasVariant(variants, "size", "_18"),
                  [sty.slotText__size__24]: hasVariant(variants, "size", "_24"),
                  [sty.slotText__size__32]: hasVariant(variants, "size", "_32"),
                  [sty.slotText__size__40]: hasVariant(variants, "size", "_40"),
                  [sty.slotText__size__48]: hasVariant(variants, "size", "_48"),
                  [sty.slotText__size__64]: hasVariant(variants, "size", "_64"),
                  [sty.slotText__size__80]: hasVariant(variants, "size", "_80")
                })
              })
            : null}
          {(hasVariant(variants, "size", "_14") ? true : false)
            ? p.renderPlasmicSlot({
                defaultContents: "list item",
                value: args.text14Px,
                className: classNames(sty.slotText14Px, {
                  [sty.slotText14Px__size__14]: hasVariant(
                    variants,
                    "size",
                    "_14"
                  ),
                  [sty.slotText14Px__size__16]: hasVariant(
                    variants,
                    "size",
                    "_16"
                  )
                })
              })
            : null}
          {(hasVariant(variants, "size", "_16") ? true : false)
            ? p.renderPlasmicSlot({
                defaultContents: "list item",
                value: args.text16Px,
                className: classNames(sty.slotText16Px, {
                  [sty.slotText16Px__size__14]: hasVariant(
                    variants,
                    "size",
                    "_14"
                  ),
                  [sty.slotText16Px__size__16]: hasVariant(
                    variants,
                    "size",
                    "_16"
                  ),
                  [sty.slotText16Px__size__18]: hasVariant(
                    variants,
                    "size",
                    "_18"
                  )
                })
              })
            : null}
          {(
            hasVariant(variants, "size", "_18")
              ? true
              : hasVariant(variants, "size", "_16")
              ? false
              : false
          )
            ? p.renderPlasmicSlot({
                defaultContents: "list item",
                value: args.text18Px,
                className: classNames(sty.slotText18Px, {
                  [sty.slotText18Px__size__14]: hasVariant(
                    variants,
                    "size",
                    "_14"
                  ),
                  [sty.slotText18Px__size__16]: hasVariant(
                    variants,
                    "size",
                    "_16"
                  ),
                  [sty.slotText18Px__size__18]: hasVariant(
                    variants,
                    "size",
                    "_18"
                  ),
                  [sty.slotText18Px__size__24]: hasVariant(
                    variants,
                    "size",
                    "_24"
                  )
                })
              })
            : null}
          {(
            hasVariant(variants, "size", "_24")
              ? true
              : hasVariant(variants, "size", "_16")
              ? false
              : false
          )
            ? p.renderPlasmicSlot({
                defaultContents: "list item",
                value: args.text24Px,
                className: classNames(sty.slotText24Px, {
                  [sty.slotText24Px__size__14]: hasVariant(
                    variants,
                    "size",
                    "_14"
                  ),
                  [sty.slotText24Px__size__16]: hasVariant(
                    variants,
                    "size",
                    "_16"
                  ),
                  [sty.slotText24Px__size__24]: hasVariant(
                    variants,
                    "size",
                    "_24"
                  ),
                  [sty.slotText24Px__size__32]: hasVariant(
                    variants,
                    "size",
                    "_32"
                  )
                })
              })
            : null}
          {(
            hasVariant(variants, "size", "_32")
              ? true
              : hasVariant(variants, "size", "_16")
              ? false
              : false
          )
            ? p.renderPlasmicSlot({
                defaultContents: "list item",
                value: args.text32Px,
                className: classNames(sty.slotText32Px, {
                  [sty.slotText32Px__size__14]: hasVariant(
                    variants,
                    "size",
                    "_14"
                  ),
                  [sty.slotText32Px__size__16]: hasVariant(
                    variants,
                    "size",
                    "_16"
                  ),
                  [sty.slotText32Px__size__32]: hasVariant(
                    variants,
                    "size",
                    "_32"
                  )
                })
              })
            : null}
          {(
            hasVariant(variants, "size", "_40")
              ? true
              : hasVariant(variants, "size", "_16")
              ? false
              : false
          )
            ? p.renderPlasmicSlot({
                defaultContents: "list item",
                value: args.text40Px,
                className: classNames(sty.slotText40Px, {
                  [sty.slotText40Px__size__14]: hasVariant(
                    variants,
                    "size",
                    "_14"
                  ),
                  [sty.slotText40Px__size__16]: hasVariant(
                    variants,
                    "size",
                    "_16"
                  ),
                  [sty.slotText40Px__size__40]: hasVariant(
                    variants,
                    "size",
                    "_40"
                  ),
                  [sty.slotText40Px__size__48]: hasVariant(
                    variants,
                    "size",
                    "_48"
                  )
                })
              })
            : null}
          {(
            hasVariant(variants, "size", "_48")
              ? true
              : hasVariant(variants, "size", "_16")
              ? false
              : false
          )
            ? p.renderPlasmicSlot({
                defaultContents: "list item",
                value: args.text48Px,
                className: classNames(sty.slotText48Px, {
                  [sty.slotText48Px__size__14]: hasVariant(
                    variants,
                    "size",
                    "_14"
                  ),
                  [sty.slotText48Px__size__16]: hasVariant(
                    variants,
                    "size",
                    "_16"
                  ),
                  [sty.slotText48Px__size__18]: hasVariant(
                    variants,
                    "size",
                    "_18"
                  ),
                  [sty.slotText48Px__size__24]: hasVariant(
                    variants,
                    "size",
                    "_24"
                  ),
                  [sty.slotText48Px__size__32]: hasVariant(
                    variants,
                    "size",
                    "_32"
                  ),
                  [sty.slotText48Px__size__40]: hasVariant(
                    variants,
                    "size",
                    "_40"
                  ),
                  [sty.slotText48Px__size__48]: hasVariant(
                    variants,
                    "size",
                    "_48"
                  )
                })
              })
            : null}
          {(
            hasVariant(variants, "size", "_64")
              ? true
              : hasVariant(variants, "size", "_48")
              ? false
              : hasVariant(variants, "size", "_40")
              ? false
              : hasVariant(variants, "size", "_32")
              ? false
              : hasVariant(variants, "size", "_24")
              ? false
              : hasVariant(variants, "size", "_18")
              ? false
              : hasVariant(variants, "size", "_16")
              ? false
              : hasVariant(variants, "size", "_14")
              ? false
              : false
          )
            ? p.renderPlasmicSlot({
                defaultContents: "list item",
                value: args.text64Px,
                className: classNames(sty.slotText64Px, {
                  [sty.slotText64Px__size__14]: hasVariant(
                    variants,
                    "size",
                    "_14"
                  ),
                  [sty.slotText64Px__size__16]: hasVariant(
                    variants,
                    "size",
                    "_16"
                  ),
                  [sty.slotText64Px__size__18]: hasVariant(
                    variants,
                    "size",
                    "_18"
                  ),
                  [sty.slotText64Px__size__24]: hasVariant(
                    variants,
                    "size",
                    "_24"
                  ),
                  [sty.slotText64Px__size__32]: hasVariant(
                    variants,
                    "size",
                    "_32"
                  ),
                  [sty.slotText64Px__size__40]: hasVariant(
                    variants,
                    "size",
                    "_40"
                  ),
                  [sty.slotText64Px__size__48]: hasVariant(
                    variants,
                    "size",
                    "_48"
                  ),
                  [sty.slotText64Px__size__64]: hasVariant(
                    variants,
                    "size",
                    "_64"
                  ),
                  [sty.slotText64Px__size__80]: hasVariant(
                    variants,
                    "size",
                    "_80"
                  )
                })
              })
            : null}
          {(
            hasVariant(variants, "size", "_80")
              ? true
              : hasVariant(variants, "size", "_48")
              ? false
              : hasVariant(variants, "size", "_40")
              ? false
              : hasVariant(variants, "size", "_32")
              ? false
              : hasVariant(variants, "size", "_24")
              ? false
              : hasVariant(variants, "size", "_18")
              ? false
              : hasVariant(variants, "size", "_16")
              ? false
              : hasVariant(variants, "size", "_14")
              ? false
              : false
          )
            ? p.renderPlasmicSlot({
                defaultContents: "list item",
                value: args.text2,
                className: classNames(sty.slotText2, {
                  [sty.slotText2__size__14]: hasVariant(
                    variants,
                    "size",
                    "_14"
                  ),
                  [sty.slotText2__size__16]: hasVariant(
                    variants,
                    "size",
                    "_16"
                  ),
                  [sty.slotText2__size__18]: hasVariant(
                    variants,
                    "size",
                    "_18"
                  ),
                  [sty.slotText2__size__24]: hasVariant(
                    variants,
                    "size",
                    "_24"
                  ),
                  [sty.slotText2__size__32]: hasVariant(
                    variants,
                    "size",
                    "_32"
                  ),
                  [sty.slotText2__size__40]: hasVariant(
                    variants,
                    "size",
                    "_40"
                  ),
                  [sty.slotText2__size__48]: hasVariant(
                    variants,
                    "size",
                    "_48"
                  ),
                  [sty.slotText2__size__80]: hasVariant(variants, "size", "_80")
                })
              })
            : null}
        </div>
      </p.Stack>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "parent", "elementIconParent", "textParent"],
  parent: ["parent", "elementIconParent", "textParent"],
  elementIconParent: ["elementIconParent"],
  textParent: ["textParent"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  parent: "div";
  elementIconParent: "div";
  textParent: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicDisplayIconText__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicDisplayIconText__VariantsArgs;
    args?: PlasmicDisplayIconText__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicDisplayIconText__Fetches;
  } & Omit<PlasmicDisplayIconText__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicDisplayIconText__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicDisplayIconText__ArgProps,
      internalVariantPropNames: PlasmicDisplayIconText__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicDisplayIconText__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicDisplayIconText";
  } else {
    func.displayName = `PlasmicDisplayIconText.${nodeName}`;
  }
  return func;
}

export const PlasmicDisplayIconText = Object.assign(
  // Top-level PlasmicDisplayIconText renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    parent: makeNodeComponent("parent"),
    elementIconParent: makeNodeComponent("elementIconParent"),
    textParent: makeNodeComponent("textParent"),

    // Metadata about props expected for PlasmicDisplayIconText
    internalVariantProps: PlasmicDisplayIconText__VariantProps,
    internalArgProps: PlasmicDisplayIconText__ArgProps
  }
);

export default PlasmicDisplayIconText;
/* prettier-ignore-end */
